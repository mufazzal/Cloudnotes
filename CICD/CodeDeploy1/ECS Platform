Deployment group:-
  The deployment group contains settings and configurations used during the deployment.
    

Deployment group > Deployment Type:-
  ECS Support only Blue/Green. So no choice here forthis. 
  
Deployment Group > Environment configuration:
  Here you slect the two thing
  1. ECS Cluster
  2. ECS Service in selcted ECS Cluster.
  
Deployment group > Deployment Setting/Configuration:-
  It define how the traffic will be shifted to new containers. Possible value:
    > AllAtOnce 
    > ECSLinear10PercentEvery1Minutes
    > ECSLinear10PercentEvery5Minutes
    > ECSCanary10Percent5Minutes
    > ECSCanary10Percent15Minutes
  You can also set 
    - If you wants to rerout the traffic to newly launched task immediatly or after some time
    - If you wants to rerout the traffic after some time then set the time also
    - If you wants to terminate the orignal task set or keep it running too.
    - IF you wants to terminate the orignal task then when you wants to terminate them.

Deployment group > Load Balancer:-
  ECS Codedeploy only supported with ALB and NLB not CLB 
  For this you have to set below values
    Two Target group:-
      For ECS deployment group you have to set two Target group of a same load balancer.
      at amy moment while deployment One will have the blue traffic and other will have the green traffic. 
      CodeDeploy take a decesion for which one to use for Blue and which one for green traffic for any deployment.
    Prod Listener:-
      You must set the prod listener where ECS will map the prod listener to prod target group.
    Test Listener:-
      Tis is optional. set iot if you wants to test the blue traffic before sending it fro prod.

ECS Appspec file:-
  Appspec file of ECS must contain below information in give formate. and it must lies at root of source bumdle.
    TaskDefinition:
      The Arn of the new task that are going to be deployed over ECS service.
    ContainerName:
      The name of container that which is mentioned in the Taskefination as well. which is hoing to be updated.
    ContainerPort:
      the exposed port of the container mapped
    Hooks:
      It is simply a lambda function you can call at specific deployment moment.
      Below are the list of available hook you can script with lambda [jsut provide lambda arn]
      BeforeInstall, AfterInstall, 
      AfterAllowTestTraffic, 
      BeforeAllowTraffic, AfterAllowTraffic
      
  Fotmate of the file is :- 
    Version: 0.0
    Resources:
      - TargetService:
          Type: AWS::ECS::Service
          Properties:
            TaskDefinition: <TASK_DEFINITION>
            LoadBalancerInfo:
              ContainerName: <name of container>
              ContainerPort: <exposed port of container> 
            Hooks:
              - BeforeInstall: "BeforeInstallHookFunctionName"
              - AfterInstall: "AfterInstallHookFunctionName"
              - AfterAllowTestTraffic: "AfterAllowTestTrafficHookFunctionName"
              - BeforeAllowTraffic: "BeforeAllowTrafficHookFunctionName"
              - AfterAllowTraffic: "AfterAllowTrafficHookFunctionName"              

------------------  

Setting ECS Service For CodeDeploy to work:-
  ESCService.DeploymentController must be set to 'CodeDEploy'
  



  
