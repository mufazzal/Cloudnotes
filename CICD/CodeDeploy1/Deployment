Now we will see how to cteate a deployment. You can do it via Console or CLI.

To Create a Deployment most of the thing to do is same across all the Application-platform.

Below are the common steps:-
  1. Select the Application created in CodeDEploy on which you wants deployment
  2. Select the deployment group with wich yoy wants deployment.
  3. Revision:  
        This contain the information about new version of application and how to deploy it.
        Its configuration is Platform dependent.
  4. Override 'DeploymentGroup > Deployment Setting/Configuration' of Deployment group.
        This is also platform dependednt like
        you can change 'AllAtOce' to 'OneAtATime' for EC2
        you can change 'ECSAllAtOce' to 'ECSLinear10PercentEvery5Minute' for ECS.        
  5. Override 'DeploymentGroup > Rollback' setting of Deployment group. 
  
  Revision:
    For EC2:-
      Here the revision is the artifact that contain AppSpec file at root with all theother dependencis. EG:-
      This is the zip file whose strucure shouls look like this [but not neccessary]
      MuBundle.zip
        |--- AppSpec.yml    MUST
        |----Config         NAme could change, this is the folder of config files
        |----Scripts        NAme could change, this is the folder of scripts
        |----Source         NAme could change, this is the folder of source code.
      You must set:
        Revison Type: Git or S3
        If its S3 then give S3 url of file
        if its Git then give git token and url of file.
        
    For ECS:-
      For ECS you must provide
        - Either a single Appspec file(json or yaml formatted) location 
        - or a zip file location containing this file only
        - or provide content for Appspec directly at a time of deployment creation.
      You must set:
        Revison Type: S3 or Write in Editor
        If its S3 then give S3 url of file
        If its  'Write in Editor' then write the conte nt there.
        
    For Lambda:-
      For ECS you must provide
        - Either a single Appspec file(json or yaml formatted) location 
        - or a zip file location containing this file only
        - or provide content for Appspec directly at a time of deployment creation.
      You must set:
        Revison Type: S3 or Write in Editor
        If its S3 then give S3 url of file
        If its  'Write in Editor' then write the conte nt there.    
    
  EC2 Deployment Special feature:-
    
    Application Stop Hook Faillure:-
      Don't fail the deployment to an instance if this lifecycle event on the instance fails.
    
    Content Overwrite:-
      For the EC2 platform, we provide the artifact with appspec which contain the detail about the filed to be copied in the target instances at destination location from artifact
      Now be itBG or In-Place, it may be possible that the target will alreday have that file there so copy operaion need some setting to handle this issue.
      For this comes 'Content options' in deployment.
      You can set one from possible configuration to handle this
        1. Fail the deployment: The deployment will be failed.
        2. Overwrite the content: File from the Artifact will be copied to target location and deployment keep going
        3. Retain the content: File in target location will e kept and file in artifact will be ignored and deployment keep going
    
Stopped and Failed Deployment:-
  Once started deployment you wants to stop it or some error stopped the deployment. This is really a messy situation
  It may be possoble that some copies may have been copied or some hook/scripts may have alreday been ran for the deployment. 
  Now your deployment may be in one of three position if deployment stopped manual or by error
  1. Deployment stopped immediatly
  2. Deployment stopped after current hook or event finish
  3. Not able to stop it.  

RollBack:-
  You can set the Automatic Rollback or do it manually.
  Automatic Rollback:- 
    You must set it in Deployment Group also iyt can be override in Deployment creation.
  Manual Roolback:-
    You can do it manually if your deployment goes in unknown state.
    

Stop VS Rollback:-
  Stop means the deployment is stopped nothing else.
  Rollback means the previous working version going to install.
