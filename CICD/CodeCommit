Setting Up user:-
  There is two way you can generate the CodeCommit cred
  1. By HTTPS [connect via IAM's codecommit username and password]:-
    For this you have to create the IAM user for each developer.
      - Create IAM user with permission 'AWSCodeCommitPowerUser'
      - Go to IAM page > User > Select user you created > Security Credentials
      - in section 'Git credentials for AWS CodeCommit' click Generate.
      - You will get the username and password for conecting to CodeCommit.
      - Go to Code commit console > Your repo > Copy url > Select HTTP Url
      - go to your terminal and paste it [git clone https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo my-demo-repo]
      - For this first time it will ask for username and password and then done.
      
  2. By git-remote-codecommit[connect via IAM's access key ID and a secret access key]:-
      Suppose your company uses the federated user, SAML Directory or only use the root account for developer too.
      then you cannot create the IAM user for each developer. for this comes 'git-remote-codecommit'
      - Install git-remote-codecommit locally.
      - Create a IAM user with permission 'AWSCodeCommitPowerUser' and note access key ID and a secret access key
      - on local machine do the 'aws confugure' and use access key ID and a secret access key
      - Go to Code commit console > Your repo > Copy url > Select HTTPS (GRC) URL 
      - go to your terminal and paste it [git clone https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo my-demo-repo]
      
  3. By SSH:-
      - For this you have to create the SSH key pair via any tool.
      - Create IAM user with permission 'AWSCodeCommitPowerUser '
      - Go to IAM page > User > Select user you created > Security Credentials
      - Select 'Upload SSH public key.' and paste the content of publik key here.
      - note the SSH key ID
      - Now set the GIt tool bu below command
              Host git-codecommit.*.amazonaws.com
              User Your-SSH-Key-ID, 
              IdentityFile Your-Private-Key-File, such as ~/.ssh/codecommit_rsa or ~/.ssh/id_rsa
              
---------------

Migrating to CodeCommit:-
  You can migrate a Git repository to a CodeCommit repository in a number of ways
    - By Cloning
    - By Mirroring
    - By cloning some or all branches
  You can migrate to CodeCommit from other version control systems, such as Perforce, Subversion, or TFS, but you must first migrate to Git.

----------

CodeCommit Notifiction:-
  You can set the SNS topic notification again the event such as
  commit, pull request, clone, merge etc.

CodeCommit Trigger:-
  The trigger has wider scope then 'CodeCommit Notifiction', it can  invoke the SNS topic and lambda as well.
---------

CodeCommit and Elastic BeanStalk:-
  CodeCommit is tightly integrated with EB. You can deploy the changes in source code directly to the EB from Codecommit via some command.
  It will deploy only changes rather then full project. So it save lot of time and internet bandwith.
  
----------
Encryption:-
  For CodeCommit, the data is automatically encrypted at rest and in transit by KMS key. 
----------

AWSCodeCommitPowerUser:-
  This is very useful permssion for developers. It give permission for CRUD operation on repositories and all therepositories related resources such as SNS, CW event etc.
  Except the deletion of repository itself.
  


