The CodePipeline is the tool that bring play the three stages of development in synch.
This stages are
  commit
  build
  deploy
  
  There are many diffrent combination of tool possible for commit and build starge of development. 
  EG you can use 
    git and jenkins  or
    bitbucket and jenkins  or
    git and CodeBuild  or
    SVN and Jenkins etc.   
    
  To abstract them with each other comes a codepipeline
  In CodePipleline it does not matter what set of tool you used its so beatifully designed that it mask each stage with each other.
  
  In the code piple line you make sure that when 
    developer commit the code
    the build process started either by jenkins or CodeBuild [as set by devops]
    once build process finish it make sure the artifact also uploaded to proper source location like S3 or google drive [as set by devops]
    Now when Codedeploy find that new artifact comes to source location
    it start deploying it over proper EC2 or Lembda.
    
    CodePipeline with Git + Jenkins + CodeDEploy
    The flow will be
      
      Developer Commit Code in GIT/SVN/bitBucket
                      |
                      |
      The buld insntrument like Jenkins/CodeBuild detected it and start build process. trun tests etc
      and finally generate the deploument bundle Zip and upload that to proper S3 bucket
                      |
                      |
      CodeDeploy detect the new artifact and start deployment
      
-----
  
S3 and CodePipeline:-
  Behind the scene codepipeline used S3 to move the artifact between diffrent stages. You can have it encrypted by aws or cutomer owned CMK.

CW and CodePipeline:-
  You can create many kind of CW alarm trigger to repond on changes happen in codepipeline state. 
  like a state change forn stage1 to stage2.
  Also Codepipeline createa default CW alarm that work as backbone of pipeline event handling.
-------------
  
Actions:-
  Action is part of the sequence in a stage of a pipeline. 
  It is a task performed on the artifact in that stage. Pipeline actions occur in a specified order, in sequence or in parallel, as determined in the configuration of the stage.
  CodePipeline provides support for six types of actions:
    Source, Build, Test, Deploy, Approval, Invoke
  Custom Action:-
    You can write the custom action for 
      Build, Test, Deploy, Approval, Invoke
  Action Fail:-
    If a stage completes with one or more failed actions, the stage fails, and the pipeline execution does not transition to the next stage in the pipeline.
    You can retry the failed action without restarting the pipeline from begin.
  Approval:-
    Here you can set a required manual intervention for codepipeline to succed. YOu can set a SNS topic and susbscribe the approver to it.
    Once pipeline reach to this point, The approver receive the email with some more detail to review the pipeline, Code, test etc.
    Now the appriver can go to console and approve it so pipeline can move ahead. If he decline then it will fai.
  Lambda as custom Action:-
    You can use the lambdain te pipeline as custom action too.
      
----

Staring Pipeline Execution:-
  There are three ways to start a pipeline execution in AWS CodePipeline
  1. When a source changes:- S3, CodeCommit, Butbucket, SVN, GIT
  2. Manually
  3. On a schedule:

    
    
    
    
    
    
    
    
