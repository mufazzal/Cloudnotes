You Can use CodeBuild for building the Docker file and uploading it to ECR.
For this:-
  Along with your source code create the file 'buildspec.yaml'
      #env: 
        #variables: 
           # key: "value" 
           # key: "value" 
      phases: 
        install:
          runtime-versions:
              docker: 18     
          commands: 
            - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
            - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
          pre_build:
            commands:
              - echo Logging in to Amazon ECR...
              - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
          build:
            commands:
              - echo Build started on `date`
              - echo Building the Docker image...          
              - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
              - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
          post_build:
            commands:
              - echo Build completed on `date`
              - echo Pushing the Docker image...
              - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      #artifacts: 
          # - location 

Below is the IMP parts:-
  pre_build: To log in to an Amazon ECR registry. The runner must has permission of ECR:GetAuthorizationToken .
  Build: Use it for building the docker image and tag it finally
  post_build: Use it for pushing the bocker build to ECR repository.
  
Now simply create the CodeBuildProject. and set al the proper value and source code location which has 'buildspec.yaml' at its root
- You can also override commands in buildspec file, when you creating the CodeBuild project
- You can also override the env var here.
- Also nothe that CodeBuild use the service role that must has permission 'ECR:GetAuthorizationToken'
Now simply run the build and once done you will see the new docker build is pushed in your ECR repo.. 
