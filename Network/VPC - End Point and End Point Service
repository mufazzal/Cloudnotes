Why we need EPS:-
  Suppose mufazzal make a application that do certain task. now he wants other to use it.
  How?
  - He can simply setup a typical model of Load balancer and expose the system to Internet.
    What is drawbach here
      1. The Application is expose to internet so any body can use it and so Mufazzal cannot encash it (assume no user registration/login there)
      2. The biggest drawback: The consumer of this service must must allow their own system to connect to internet to consume Mufazzal's Service.
    Say a bank need this service but the bank say red bold NO to conecting their system to internet.
    So what mufazzal will do if he has created a Application but he wants to share it without internet?
    
    Here comes the 'End Point Service' :-
      In simple word the EPS is the wrapper around the Network Load Balancer.
      So first you hae to create a NLB, This NLB can be spread across multiple AZs (and subnet) 
      This NLB will have its own Target Group, ASG etc.
      
      Once NLB is ready you can use this NLB to create the EPS.
      To create EPS go to VPC > Endpont Service > Create
      - Select NLB [this will by default select the AZ and Subnet as the selected NLB has them attached]
      - Auto Acceptence: check if you wants to allow anyone to use your service, without your manual allowing process.
      Done.
      
      The EPS simply expose the NLB to the consumer whos is allowed to use the service (not to full internet).
      This EPS service will available only in those AZs which are coming with NLB (not in other AZ). 
      So consumer has to make sure he has to be in at least one of that AZ if he wants to consume.
      
      After that you will get the DNS name for that Service. This look like below
      'com.amazonaws.vpce.us-east-1.vpce-svc-03edf0bb1f6f09c9d'

      Now any one in this universe can use this DNS name to consume ur service.
      Suppose alex in USA wants to use this service
      Q. What Alex need to do?
      A. Alex need to creat the Endpoint and request Mufazzal to allow him to use the Service.
      
      Now How Alex will create the Endpoint?
      Alex will login to his AWS account and Go to VPC > End point
      1. Alex will Enter the DNS name of Mufazzal's service and search.
      2. Alex will Select VPC in which he wants consumption
      3. After Alex selected the VPC he will see the supported AZs or Subnet
         This suppored AZ/Subnet are super set of 'AZ of NLB of Mufazzal`s Service' and 'AZ of Alex`s VPC'
        3.1 In those supported Subnet, Alex can select/unselect the Subnet in which he wants to create the End point.
            for higher availability Alaex shoud select more then one Subnet. [VVIMP: This does not effect access of endpoint in any unselected subnet]
      4. Alex will now choose the SG for this EP. 
      Done.
      
      Now AWs will send a request to Mufazzal saying, Het Alex wants to use ur service.
      once mufazzal accept. its status comes available for Alex.
      
      In the end you will get the 'DNS names' of EP and its formate is
      'vpce-03669075e10b5dfa6-scr493ip.vpce-svc-03edf0bb1f6f09c9d.us-east-1.vpce.amazonaws.com'
      
      now if Alex do the 
      curl vpce-03669075e10b5dfa6-scr493ip.vpce-svc-03edf0bb1f6f09c9d.us-east-1.vpce.amazonaws.com:80, he will reach to NLB of Mufazzal's EPS.
      The url will not lead the alex to internet, instaed to mufazzal's EPS directly via aws backbon network.
      
      Notes: 
        Though in creation of endpoint you select/unselect AZs, but it has no impact on which subnet/Az can use this EP and which cannot.
        - This is only for higher availability purpose.
        - Q: does the choosed subnet need to have internet access (IGW attached) ?
          NO! becoz the traffic never leave the AWS ecosystem. this generate in VPC of alex and reach to Mufazzal's NLB via AWS backbon network.
            it never touches the iternet. So no IGW needed for Alex and mufazzal both.
        - EP is created at VPC level (not at subnet level) so it can be use in any EC2 lying in any subnet of that VPC.
        - The EP and EPS both must lies in same region so provider and client must e in same region and at least one AZ of both must overlap.
        - This mechanics of connection between EP and EPS is called 'AWS Private Link'
        - Also its way too fast the typical internet.
      
      EP and background:-
        Actully when you create the EP, it will create the ENI in each subnet selected in step 3.1
        This ENI will never do not have public IP, this ENI simply connect the AWS backbone network and give getway to reach the Mufazzal's service.
                          
     EP and Private DNS:-
      By default PRivate DNS is enabled for below kind of EP
        - AWS Services
        - Partener Matketplace aws services
      By this you can access the AWS services via the EP with their orignal DNS name rather then EP-specific DNS name.
      So no matter you wants to access 'ec2.us-east-1.amazonaws.com' or 'ep-123.ec2.us-east-1.amazonaws.com' both will rersolve the the Private Ip of ENI of that EP.
      
 
 So via this set up Alex' VPC and Mufazzal's service can communicate without internet via AWS backbone.
---------------------
   Now surprise!
   Every AWS provided service is also have a affliated End point service.
   EG:
    SQS has the EPS 'com.amazonaws.us-east-1.sqs'
    SNS has the EPS 'com.amazonaws.us-east-1.sns'
    EC2 has the EPS 'com.amazonaws.us-east-1.ec2'
    RDS has the EPS 'com.amazonaws.us-east-1.RDS'
    ...
    ...
    S3  has the EPS 'com.amazonaws.us-east-1.S3'            ***
    dynamodb has the EPS 'com.amazonaws.us-east-1.dynamodb' ***
    
    *** Condition apply
    
    So to use any of the AWS backed service you do not need the internet of internet getway.
    you can simply create the endpoint for those service (just like alex did above) and use that endpoint for those services.
    
    Advantage:-
      if you are using AWs apis or AWS sdk in the EC2s of you system. then Amazons provided EPS will give you better and fast speed and you do not even have to 
      attach the internet getway for this.
      you can access any aws provided EPS service without internet.
      EG:-
        you can do  sns.Publish() or ec2.createInstance() 
        or curl GET sns.sws.com/ques 
        or > aws ec2 describe-instances   etc without internet or NAT getway.
    
    
   Special case of S3 and Dynamo DB:-
    This two service has sligh diffrent mechnism for EP. They do not use mechanism of 'AWS Private Link' instead they use Getway 
    rest of all services are type of 'Interface Endpoint' this two is type of 'Getway Endpoint'
    Getway Endpoint is scoped at Rout Table level instead of VPC level. So the EP of S3 and DD will available only on those subnet which has RT with one special route for S3 and DD   
    
    Creating Endpoint for S3 and DyanamoDb:-
      All thing same but in step 3, you will not see the list of AZs instead you will see the list of all RT in selected VPC.
      Now you can choose in which RTs you wants this EP to be available. selected RT will provide access of S3 and DD's EP service to attached subnet.
      once selected the aws sytem will add below(either for s3 or DD) routes in thosse Route Table
        pl-<some random>	vpce-<id of getway>
      
      How to use this service:-
        usage is 100% same as the one above. the only diifrence is that you can use it only in the subnet that has proper RT attached to it.
        
      
      
-------------------------------------
  Inter-Region VPC end point:-
    EPS work if client and provider (AWS service or user made) are in same region. but if they are in diffrent region then you have to use
    VPC-Peering and private link together to use the EPS across region.
      
      
      
      
      
      
      
      
      
      
