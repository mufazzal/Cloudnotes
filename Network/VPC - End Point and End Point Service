Why we need EPS:-
  Suppose mufazzal make a application that do certain task. now he wants other to use it.
  How?
  - He can simply setup a typical model of Load balancer and expose the system to Internet.
    What is drawbach here
      1. The Application is expose to internet so any body can use it and so Mufazzal cannot encash it (assume no user registration/login there)
      2. The biggest drawback: The consumer of this service must must allow their own system to connect to internet to consume Mufazzal's Service.
    Say a bank need this service but the bank say red bold NO to conecting their system to internet.
    So what mufazzal will do if he has created a Application but he wants to share it without internet?
    
    Here comes the 'End Point Service' :-
      In simple word the EPS is the wrapper around the Network Load Balancer.
      So first you hae to create a NLB, This NLB can be spread across multiple AZs (and subnet) 
      This NLB will have its own Target Group, ASG etc.
      
      Once NLB is ready you can use this NLB to create the EPS.
      To create EPS go to VPC > Endpont Service > Create
      - Select NLB [this will by default select the AZ and Subnet as the selected NLB has them attached]
      - Auto Acceptence: check if you wants to allow anyone to use your service, without your manual allowing process.
      Done.
      
      The EPS simply expose the NLB to the consumer whos is allowed to use the service (not to full internet).
      This EPS service will available only in those AZs which are coming with NLB (not in other AZ). 
      So consumer has to make sure he has to be in at least one of that AZ if he wants to consume.
      
      After that you will get the DNS name for that Service. This look like below
      'com.amazonaws.vpce.us-east-1.vpce-svc-03edf0bb1f6f09c9d'

      Now any one in this universe can use this DNS name to consume ur service.
      Suppose alex in USA wants to use this service
      Q. What Alex need to do?
      A. Alex need to creat the Endpoint and request Mufazzal to allow him to use the Service.
      
      Now How Alex will create the Endpoint?
        Please see Interface EP.
      
      Now AWS will send a request to Mufazzal saying, Het Alex wants to use ur service.
      once mufazzal accept. its status comes available for Alex.
      
      In the end you will get the 'DNS names' of EP and its formate is
      'vpce-03669075e10b5dfa6-scr493ip.vpce-svc-03edf0bb1f6f09c9d.us-east-1.vpce.amazonaws.com'
      
      now if Alex do the 
      curl vpce-03669075e10b5dfa6-scr493ip.vpce-svc-03edf0bb1f6f09c9d.us-east-1.vpce.amazonaws.com:80, he will reach to NLB of Mufazzal's EPS.
      The url will not lead the alex to internet, instaed to mufazzal's EPS directly via aws backbon network.
      
      Notes: 
        Though in creation of endpoint you select/unselect AZs, but it has no impact on which subnet/Az can use this EP and which cannot.
        - This is only for higher availability purpose.
        - Q: does the choosed subnet need to have internet access (IGW attached) ?
          NO! becoz the traffic never leave the AWS ecosystem. this generate in VPC of alex and reach to Mufazzal's NLB via AWS backbon network.
            it never touches the iternet. So no IGW needed for Alex and mufazzal both.
        - EP is created at VPC level (not at subnet level) so it can be use in any EC2 lying in any subnet of that VPC.
        - The EP and EPS both must lies in same region so provider and client must be in same region and at least one AZ of both must overlap.
        - This mechanics of connection between EP and EPS is called 'AWS Private Link'
        - Also its way too fast the typical internet.  
        - A service provider can configure their service to accept interface endpoint requests automatically or manually
        - A service provider cannot delete an interface endpoint to their service. Only the service consumer that requested the interface endpoint connection can delete the interface endpoint
         
 So via this set up Alex' VPC and Mufazzal's service can communicate without internet via AWS backbone.
---------------------
   Now surprise!
   Every AWS provided service is also have a affliated End point service.
   EG:
    SQS has the EPS 'com.amazonaws.us-east-1.sqs'
    SNS has the EPS 'com.amazonaws.us-east-1.sns'
    EC2 has the EPS 'com.amazonaws.us-east-1.ec2'
    RDS has the EPS 'com.amazonaws.us-east-1.RDS'
    ...
    ...
    S3  has the EPS 'com.amazonaws.us-east-1.S3'            ***
    dynamodb has the EPS 'com.amazonaws.us-east-1.dynamodb' ***
    
    *** Condition apply
    
    So to use any of the AWS backed service you do not need the internet of internet getway.
    you can simply create the endpoint for those service (just like alex did above) and use that endpoint for those services.
    You wil not even need the Internet or NAT getway to reach to those AWS services if you use EP.
    
-------------------------------------

  Type of EPS:-
    There is three kind of EPS in aws 
    1. for AWS services itself like
        SQS has the EPS 'com.amazonaws.us-east-1.sqs'
        SNS has the EPS 'com.amazonaws.us-east-1.sns'
        EC2 has the EPS 'com.amazonaws.us-east-1.ec2'
        RDS has the EPS 'com.amazonaws.us-east-1.RDS'
        S3  has the EPS 'com.amazonaws.us-east-1.S3'           
        DDB has the EPS 'com.amazonaws.us-east-1.dynamodb'
    2. for AWS paryner marketplace services
        ????\
    3. Custom made:
      like one made by mufazzal 'com.amazonaws.vpce.us-east-1.vpce-svc-03edf0bb1f6f09c9d'
        

      
      
      
      
      
      
      
      
      
      
