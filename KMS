When it comes to encryption and decryption the KMS play the central role in AWS ecosystem.

The KMS is mpotre than just a primitive en-dc system. its a complete managed service.

Its so strongle integrated with other system that with just few setting you can use this to en-dc the file/dat/object of below items
  1. S3
  2. EBS
  3. RDS
  4. Elastic Transcoder
  All of them have few setting in their contextual page to enable disable the en-dc via KMS.
  
  CMK (Customer Master key) :-
    In simple word the key you see or create in console in any tab ('Customer managed keys' or 'AWS managed keys') is a CMK.  
  There is two type of key in AWS-KMS CMK
    1. AWS managed CMK : This is a default key that is generated for you. though you cannot delete/change it at all.
        there is one anly one such key for each account. 
        Its key policy written as such that the root user and all the IAM user can do use tis key for 'kms:encrypr' and 'kms:decrypr'
        But root user can do some more operation like 'kms:Get*', 'kms:List'
        But no one (not even root) has permicssion for action 'kms:Delete'.

    2. Customer Managed CMK
        You can create your own keys here and manage its access by the key policy. Just like the BP in S3, there is Key Policy in KMS.
        Key policy define that the key assosiated with it, will be accessible (for what action also) to which IAM users.
        Its key policy written as such that the root user and all the IAM user can do use tis key for 'kms:encrypr' and 'kms:decrypr'
        some user can do some more operation like 'kms:Get*', 'kms:List'
        few user has permicssion for action 'kms:Delete'.
    Actully both kay work 100% same, the only diffrence is one is not at all changable by even root account.


Creating Key :-
  in AWS > Key management system > Customer managed keys > Create Key
  Now provide IMP info for key policy
  Done  
---

 KMS uses key policy the decide rhe access level of any key. 
 you can use User and Role only to assign the permission not USER GROUP (Why? No one know)
 Therer is IMP permission in Key policy that you must provide
    1. Who can manage it what level
        Those who can edit/delet the key
    2. Who can use it for en/dc
        Those who can use this key for en/dc (but not able to delete or edit it)    
  
---  
  How to do the en/dc :-
    there is as usual three way
    1. By SDK
    2. By API
    3. BY AWS-CLI    
    
  Before you do the en/dc by any of those three, the first thing you have too do is Authentication
  And for this either you use Role or IAM-User
    For SDK see #AWS_SDK_AUTHENTICATE in 'AWS JS SDK.txt'
    For API see #AWS_API_AUTHENTICATE in 'AWS API.txt'
    For AWS-CLI see #AWS_CLI_AUTHENTICATE in 'AWS CLI.txt'
    
   
  Below is the code that you can use to en/dc the data string with any kay.
  Now this code could be hosted over EC2, Lembda or any non-aws node server.
  to make it working it is must that they are authenticated with proper User/Role who has the permission to use this key for encrypt and decrypt the 
    
          const kms = new AWS.KMS();
          const params = {
            KeyId: '1cee637d-43d9-4329-aa55-59d17c7a4f5f', 
            Plaintext: Buffer.from('Mufazzal Hussain','utf-8') 
          };
          kms.encrypt(params, (err, enData) => {

            console.log("Encrypted--> ", err, enData.CiphertextBlob)

            const params = {
              KeyId: '1cee637d-43d9-4329-aa55-59d17c7a4f5f', 
              CiphertextBlob: enData.CiphertextBlob
            };	
            kms.decrypt(params, (err,deData) => {
              console.log("Decrypted--> ", err, deData.Plaintext.toString('utf-8'))
          });
----

  In many of the services like S3, EBS etc. the KMS is so strongly integrated that you hardly need any coding there.
  It integration with diffrent services should be analyze in their own tutorials.
    
---

  Envolop key / Data key :-
    Envolop key is the key which is use to encrypt and decrypt the key (AWS-CMK key) itself.
    How
    ??????????
    
-------------

  Aprt from this tyhe KMS also provide the API ti do this operation. will see it later
  ??????????????????????    
    
       
  ----------------------  
  How ro delete the key:-
    You cant delete the key immediatly but you have to schedule the deletion. Why???????????????
    
  What happen if i encrypt something on S3 or RDS or EBS with some key and later delete it.
  What will happen to my encrypted items
  ?????????????????
  
  
