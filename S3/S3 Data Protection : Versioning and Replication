Versioning and Replica both are applied over the Buket Level not on Object level.

Versioning:-
  The bucket can be in two state at a time either at Versioning Enabled or at Versioning Suspended.
  By default it is versioning Suspended state.
  By enabling it you can preserve the object previos versions after deletion or override.

Mechanism of versioning supended bucket[never has versioning enabled]:-
  Say you created a bucket 'ProfilePic' and upload three pic.
  This look like below
  	
  | muf.jpg 	null	3MB |		#state0
  | arr.jpg 	null	2MB |
  | mur.jpg 	null	1MB |
  -----------------------
  
  Deleting/Override/upload for version suspended bucket:-
    This will Delete/Override/upload the object without retaining any trace of that object.
    EG. 
			you do
			DELETE muf.jpg
			PUT arr.jpg 
			PUT hus.jpg
			
	| 									  |
	| hus.jpg 	null	2MB |
	| arr.jpg 	null	9MB |
	| mur.jpg 	null	1MB |
	-----------------------

Mechanism of versioning enabled bucket:-

	Enable versioning in version suspended Bucket:-	
		If you enable the versioning after some of the nonversioned object uploaded there then those object will remain unversioned
		they will not be preserve with version id if somone upload or delete them.
		So bucket may look like below if you enable versioning on #state0

		| muf.jpg 	null	3MB |
		| arr.jpg 	null	2MB |
		| mur.jpg 	null	1MB |
		-----------------------	

	Upload/Override on Version enabled Bucket:-
		If you upload any objevt in version enable bucket then S3 will add that object in bucket and assign a version id to him.
		Whart happed to pervios versions of that object is depend on below 
			1. If object does not exist previously
			2. If object exist previously and its vId = null.
			3. If object exist previously and its vId not null.

			1, 2 and 3: In all the cases the new object will be uploaded and no trace of previous one will be retain(for overide)
			So bucket will look like below. EG (muf.jpg overried and hus.jpg fresh upload)
			PUT muf.jpg and
			PUT hus.jpg
			
				| muf.jpg 	v1		5MB	<|>	muf.jpg 	null	3MB |
				| hus.jpg 	v1		7MB 												|
				| arr.jpg 	null	2MB 												|
				| mur.jpg 	null	1MB 												|
				-----------------------------------------------		

				say after uploading v1 of 'muf.jpg' you again upload it.

				| muf.jpg 	v2		5MB	<|>	muf.jpg 	v1	3MB	<|>	muf.jpg		null	3MB |			#state1
				| hus.jpg 	v1		7MB 																							|
				| arr.jpg 	null	2MB 																							|
				| mur.jpg 	null	1MB 																							|
				---------------------------------------------------------------------

				At this state if you do
				GET muf.jpg the you will get muf.jpg@v2

	Delete on Version enabled Bucket:-
		If you Delete any objevt in version enable bucket then S3 will not actully delete that OBject Key instead S3 will add 
		a Delete Marker (DM) on the top of that object-key with latest version id and make it apear like delete.
		Whart happed to pervios versions of that object is depend on below 
			1. If object exist previously and its vId = null.
			2. If object exist previously and its vId not null. 			
				- In both cases previous one will be uphold.
			Suppose bucket at #state1 you did two operation
			DELETE muf.jpg  sec-2
			DELETE arr.jpg  sec-1

				| #DM#			v3		 -	<|>	muf.jpg		v2	5MB	<|>	muf.jpg 	v1	3MB	<|>	muf.jpg		null	3MB |				#state2
				| hus.jpg 	v1		7MB 																																		|
				| #DM#		 	null	2MB <|> arr.jpg 	null	2MB											                        |
				| mur.jpg 	null	1MB 																							                      |
				-------------------------------------------------------------------------------------------

			At this state if you do
				GET muf.jpg then you will get 404
			
			Think of #DM# as just a another uploaded version the only diiference it that it make things like delted and give 404.
			You can have a multiple #DM# in the version history if uts deleted many time EG.
			this is possible-
				#DM#	v2	-  <|>	hus.jpg 	v1	7MB	<|>	#DM# 	v1	7MB	<|>	hus.jpg 	v1	7MB
			
Mechanism of versioning supended bucket[but has history of versioning enabled]:-
	If you suspend the versioning then all the prvously uploaded versioned object will retain their version infos.
	Upload/Override on Version such Bucket:-
		If you upload any objevt in version enable bucket then S3 will add that object in bucket and will set their versionid = null.
		What happed to pervios versions of that object is depend on below 
			1. If object does not exist previously
					- Then this object wil be added with version id = null with no history. 
			2. If object exist previously and its vId = null.
					2.1 vId = null is at the top
					2.2 vId = null is somewhere in version history.
						-	In this cases the previous copy with vId = null will be vanished and will have only obe object with vId = null at the top. 
			3. If object exist previously and its vId not null.
					- Then those previos version will be preserved and then a new object will be added with vid = null.
			4. If object has #DM# at top
			
		Suppose after #state1 you did below operations
		PUT fat.jpg  sec-1
		PUT hus.jpg	 sec-3	
		
				| fat.jpg 	null	8MB 																							|
				| muf.jpg 	v2		5MB	<|>	muf.jpg 	v1	3MB	<|>	muf.jpg		null	3MB |
				| hus.jpg 	null	6MB <|> hus.jpg 	v1	7MB													|
				| arr.jpg 	null	2MB 																							|
				| mur.jpg 	null	1MB 																							|
				---------------------------------------------------------------------	
	
	Now in above bucket you do
	PUT hus.jpg		sec 2.1
	PUT muf.jpg		sec 2.2
	
				| fat.jpg 	null	8MB 																							|
				| muf.jpg		null	1MB <|> muf.jpg 	v2		5MB	<|>	muf.jpg 	v1	3MB	|
				| hus.jpg 	null	1MB <|> hus.jpg 	v1		7MB												|
				| arr.jpg 	null	2MB 																							|
				| mur.jpg 	null	1MB 																							|
				---------------------------------------------------------------------		
	
	
GET/PUT/DELETE on versioned object:-
	you can do GET and DELETE operation on the versioned object but not the PUT.
	To this simply pass the param 'VersionId' in each of that request.


Object Versions and their ACLs:-
	Each version of the object have its own ACL, It may be posible that muf@v1 if publically accessible but muf@v2 is not.
	Making latest version public/private will not impact the other versions. you have to change their accesibility by yourself 

---------------------------------------------------------------------------------------------------

Replication:-

Suppose you place you data in the bucket 'mufBucket' but somehow 
	- This bucket is corrupted or 
	- You lost credential for accessing it or 
	- Someone just delete all its data.
	In all above cases you will never be able to get the data back. even though you had data at Multiple AZ based on your storage class
	But in all above three cases the data from those AZ will also got lost or inaccessible because those Multi AZ copis of data belengs to same bucket.
	
	To handle this situation comes the Replication.
	By default this is disabled but you can configure it. By this you can simply keep the copy of the data in one bucket to another one. 
	Replication happen over bucket level. though you can filter object to be replicated by Tag or Prefix.
	

    Prerequisites for Replication:
      both tge bucket soirce and destination must have versioing enabled.

	Mechanism:-
		If you wants to have Replication of bucket then you must first have
		- Source bucket must be version enabled.
		- A additional bucket(Target bucket) which will have reploca of object in spurce bucket
		- A service Role for S3 that gives S3 permission to GET object from Source and DELETE/PUT in target.
		Now you can cofigure below rules for copying:-
		- Filter: You can set the Tag or Prefix for filtering the object to be replicated. by default whole bucket id replicated.
		- Object Storage Class: You can change the storage class of replica object. It saves cost
		- Object Ownership: You can also change the ownership of reploca object to the bucket owner so the bucket owner can have some control oer it.
		- Replication Time Control: If you enable this then AWS guarantee you that 99.99% of your objects will be copied in 15 mnt. this is chargable.

	Remember:-
		- Older Objects: Once configured, the replication take place for new PUTs not the older existing onject. so replication will only replicate the files when replication is activated.
		- Delete: Deletion is not replicated at all. so if some object is deleted from spource then its replica will not be deleted. this give additional data preservness. 
	
	
	----
	
	How to restore the deleted object in versioned bucket:-
		Simply delete the delete marker


------------------------------------------

Object Lock:-
	This feature enable user to put a lock on the object(not bucket). If its been locked then other user will not be allowed to do certain operations on that object 
	There is 3 type of lock
	1. compliance: if enable then no one will be delete/modify this object for specified time.
	2. governance: if enable then only some peoople with special permissions will be ae to delete/modify this object.
	3. Legal Hold: if enabled by user, then no one else will be able to delete/modify it till legal hold removed
	



