#View file in tab = 2


Relation of Bucket/Object and root-USer/IAM-User/Congnito-USer/Anonymous-user
	Bucket can be created by root-USer, IAM-User, Congnito-USer but not by Anonymous-user
	Object can be created by root-USer, IAM-User, Congnito-USer, Anonymous-user
	
	exept for root-user, S3 has the flat structure for ownership of any bucket or object.
	for any S3 bucket or Object the only and only owner is ROOT USER. no one else. 
	
		Anyone either 
			IAM user, Cognito identity user, Anonymus user(*1)
		can 
			create, delete, edit, change Tag, modify policy, change any configuration on bucket or object
		if they have proper permission to do so.  
*1: Anonmous user at best can get list of object, read the object and its ACL only. no other operation allowd by anonymous.
		
		Visualize it like this 
			
																																																 
			-----------------------																		 				          							 
			|IAM user							|																						          							 
			|	- Mufazzal_Hussain	|						---------												          							 
			|	- Murtaza						|	S3:*			|				|														      							 
			|	- Shabbir						|=========>>|	IAMP	|==============>>================|		      															 
			|IAM Role							|						|				|												        ||  							 
			|	- EC2ServerRole			|				 		---------												        ||  							 
			|	- LambdaUserRoel		|																										||								 
			|cognito id						|																										||								 
			|	- appuer1						|																										||			
			|	- appuser2					|																										||							            															
			-----------------------																						        ||    
																																								||
			       											                                              ||
			_______________________	       	                              						||				---------					______________________________
			|Root User						|		S3:*	          The Owner of ALL                ||        |				|         |															|
			|		h.mufazzal@gmail	|===============>>=====================|            |=======>>|				|         |					devopsBucket				|
			|_____________________|					  													||                      |	BP		|=======>>|					profile_bucket			|
																																	||            |=======>>|				|         |						mubucket					|
																																	||            ||        |				|         |															|
																																---------       ||        ---------         |_____________________________|
				                                                        | Object|       ||
			_______________________						                        |	OR		|       ||
			|											|		S3:*		      	                |	Bucket|===>>===|
			|Other AWS accout			|===============>>================>>|	ACL		|       
			|		awsacc1						|							                      |				|       
			|_____________________|         		                      ---------
																																	 ^^
																																	 ||			 
			_______________________	       	 ----------------						 ||									 
			|											|					 |						 	|						 ||										 
			|Anonymous users			|===>>====>|			BPAF	 	|===>>========|																 
			|_____________________|		RA	 	 |							|																 
			                                 ----------------																 
													RA = Only some Rest APi are allowed, that are
															- GET objectList
															- GET BucketACL
															- GET Object
															- PUT Object
															- GET ObjectACL																			 
																			 

There two broad way to manage the access
	1. Resource Based
		1.1 ACL
		1.2 Bucket Policy
	2. User Based
		2.1 IAM Policy
		

ACL:-
	This is the most basic way to manage the access. Its a kind of legacy and necessary in very few scenario.
	most of the time we use BP or IAMP instaed of ACL. But in one condition where ACL is ir-replacible.
	ACL Apply on Bucket and Object both.
	ACL use the XML to define the permission. but you hardly ever write this XML.	we use console, sdl, cli to set the ACL.
	
	ACL work for below principle
	-	Cross AWS account Access
	- Predefined AWS Group Access
	- Public Anonymous Access
	It not work for
	- IAM User
	
	Kind of Access on Actions it provide is also very limited. It give just basic read and write access over bucket. bucket_ACL, object, object_ACL
		
	ACL for Bucket:-
		In context of bucket the ACL grant access to below operation to Principls
		READ: Will provide access to reading the list of object inside the bucket. So access to Action 's3:ListBucket, s3:ListBucketVersions'
		WRITE: Will provide access to add/update/delete object inside the bucket. So access to Action 's3:PutObject, s3:DeleteObject'
		READ_ACL: Will provide access to reading the ACL of Bucket. So access to Action 's3:GetBucketAcl
		WRITE_ACL: Will provide access to change the ACL of Bucket. So access to Action s3:PutBucketAcl'
		FULL_CONTRL: all 4 accesses
		
		Does any of those permission provide access to Resource/Action like
			isVersiningEnabled, getTags, setBucketPolicy etc
		NO. The ACL give only and only the basic read write accees nothing else.	
		So with ACL permission you can add/read/delete the objevts in Bucket but cannot change any configuration of bucket itself.

		Predfined AWS group for ACL:-
			The is three predefine user-group for ACL 'AuthenticatedUser-group' and 'AllUsers-group'
			AuthenticatedUser-group: means all the user in the universe who has authenticated with AWS account. so basically you allow whole word aws users to access your bucket.
			AllUsers-group: Access to whole world. no authentiaction required atall. so OPEN TO ALL. This is actully a Public Anonymus Access
			Log Delivery group: Represented by http://acs.amazonaws.com/groups/s3/LogDelivery

		You can set the ACL on bucket via AWS console or by CLI or by SDK.
		ACL on Bucket via AWS console:-
			go to bucket > permission > ACL
			You will see four panels(AuthenticatedUser-group is not there) and Each has 4 options to toggle. which are like below
									
									
																					List objects 	 | 	 Write objects    |  	Read bucket permissions   |  	Write bucket permissions
				1. For Bucket owner
				2. For Other AWS account
				3. Public Access or AllUsers-group
				4. Log Delivery Group
				5. AuthenticatedUser-group
			
			In this metrics you can easily figure out how you can set the accesses for difftent principle.
			
			To give access to diffrent AWS account you need to add the canonical Id of that AWS account.
			Log delivery group ??????
			You can also remove the permission of bucket owner too. if you remove access of owner then the owner himslef also not be able to view/edit object in bucket.
			When you create a bucket then by default this bucket is private. only the owner has all the permission in ACL no one else.
			
			
			ACL on Bucket via CLI, SDK, CFT :-
				To set ACL via console is quite straihtforward. you just need to fill a matrix form and you are done.
				But for other medium there is tricky way
							for this we use the Canned ACL. This is the predefined set of permission in diffremt combination of READ, WRITE, READ_ACL, WRITE_ACL, FULL_CONTROL.
				
				#CannedACLTABLE
				
				Canned ACL					Apply on											ingridients																	Use case
				private								B O						Owner: 														FULL_CONTROL						Bucket/Object Owner has full control. no one else has any access. This is default ACL setting.
																						Public_Access or AllUsers-group:	none 
																						Other AWS account:								none
																						AuthenticatedUser-group:					none
																						Log Delivery Group:								none
			
				public-read						B O						Owner: 														FULL_CONTROL						Bucket/Object Owner has full contron.
																						Public_Access or AllUsers-group:	READ	 									All other in the world can just read it anonymously without any kind of authentication.
																						Other AWS account:								???
																						AuthenticatedUser-group:					???
																						Log Delivery Group:								???

				public-read-write			B O						Owner: 														FULL_CONTROL						All in the world can read/write anonymously without any kind of authentication.
																						Public_Access or AllUsers-group:	FULL_CONTROL						
																						Other AWS account:								???
																						AuthenticatedUser-group:					???
																						Log Delivery Group:								???
				authenticated-read		B O						Owner: 														FULL_CONTROL						Bucket/Object Owner has full contron.
																						Public_Access or AllUsers-group:	FULL_CONTROL						Authenticated AWS user can read the bucket/Object
																						Other AWS account:								none
																						AuthenticatedUser-group:					READ
																						Log Delivery Group:								none		
				bucket-owner-read		 		O						Owner: 														FULL_CONTROL						Object Owner has full contron. Bucket Owner can read.
																						Bucket Owner:											READ
																						Public_Access or AllUsers-group:	none						
																						Other AWS account:								none
																						AuthenticatedUser-group:					none
																						Log Delivery Group:								none																								
		bucket-owner-full-control		O						Owner: 														FULL_CONTROL						Object Owner and Bucket owner has full contron.
																						Bucket Owner:											FULL_CONTROL
																						Public_Access or AllUsers-group:	FULL_CONTROL						
																						Other AWS account:								none
																						AuthenticatedUser-group:					none
																						Log Delivery Group:								none																							
																						
				
	ACL for Object:-
		Object level ACL decide that if grantee can access the Object and its ACL or not.
		At bucket level access grantee can be granted to add/edit/delete the object in the bucket but not to read or download the object itself.
		For this he need the ACL permission at object level.

		In context of bucket the ACL grant access to below operation to Principls
		READ: Will provide access to downloading/reading the object. So access to Action 's3:GetObjct'
		WRITE: Not applicable at object level. as write permission is granted via ACL of bucket
		READ_ACL: Will provide access to reading the ACL of Object. So access to Action 's3:GetObjectAcl
		WRITE_ACL: Will provide access to change the ACL of Object. So access to Action s3:PutObjectAcl'
		FULL_CONTRL: all 4 accesses
		
		Does any of those permission provide access to Resource/Action like
			isVersiningEnabled, getTags, setObjectPolicy etc
		NO. The ACL give only and only the basic read accees nothing else.	
		
		You can set the ACL on object via AWS console or by CLI or by SDK.
		ACL on Bucket via AWS console:-
			go to bucket > ypour object > permission > ACL
			You will see three panels(AuthenticatedUser-group is not there) and Each has 3 options to toggle. which are like below
									
																					 			Read object    |  	Read object permissions   |  	Write object permissions
				1. For object owner
				2. For Other AWS account
				3. Public Access or AllUsers-group

		ACL on Bucket via CLI, SDK, CFT :-
			See table 	#CannedACLTABLE
			
		By Default the Object ACL is private and so only the owner has the full access. no one else.
		but if you set it like to be accessible to public anonymously.
		

### ACL is a Legacy and it has very few use case. Only time it is unavoidable to use is to 
			-	when you need to share the bucked between multiple AWS accounts.
			- You wants any particular object to be anonymously public accessible
		Otherwise DO NOT USE IT. 
		Even allowing/denying the anonymous public access of bucket is also possible with Bucket Policy.		
	
	Intrasting use case of ACL: Making a particular object public in bucket:-
		Suppose you wants to allow some particular objects in the bucket to be public. Now how would you do it?
		1. BPAF: You have to set it Off. so it allow anonymous request to flow.
		2. Bucket ACL: You can keep the bucket private as for reading/downloading object we need Object-ACL permission not Bucket-ACL permission
		3. Object ACL: It must be publi-read so that anonymous user can readthe object.
		4. IAMP: IAMP do not matter for Anonymous user
		5. BP: ???????????????????????
	
Bucket ACL VS Object ACL:-
	When you wants to get the list of object in bucket or add/edit/delete the object in bucket then Bucket-ACL is used to give access.
	When you wants to read/download the object then Bucket-ACL is used to give access.
	After any request only one of then will be ued so they never come acrossin each other path.
	Once finish up with one of them the request go to BP to determine if BP also allowing the operation or not. 


	

--------------

Accessing Bucket and object Anonymously:-

	By AWS SDK:-
		No single AWS SDK support the anonymous access. so if you wants to do any anonymous operation on S3 buckets o object then you have to use the REST API directly.
	By CLI:
		Not support for anonymous access here also
  By AWS console:-
		No way. you must first login in console
	By direct Rest API:-
		Yes. This is the only way
	
	What operation you can do on bucket and object anonymously:-
		This is also very limited.
		Bucket:-
			You can get list of object in bucket  API:- see in S3Tuto function 'getObjectListAnonymous'  
			You can Add/Delet obect								API:- see in S3Tuto function 'doAnonymousUpload'  
			You can get the ACL of Bucket.
		Object:-
			You can get the object with metadata
			You can get the ACL of Object.
			
			
		I can access the object anonymously when
			1. bucket ACL:
					Doensnt matter at all. For bucket ACL to be private mns you can get the list of object in tha bucket or add/delete/edit new object.
								For getting object you should have grant from object ACL only
			2. Object ACL:
					Must be have public access enabled. so public or public-read
		  3. BP 
					Must allow Anonymus access.
		  3. IAMP
					Doesnt matter. For anonymous user IAM policy never comes to picture.
		  4. When BPAF.
					It must be off.
			
			
	Who is the owner of bucket object if it is uploaded anonymously. who is its owner?
	DO NOT GO IN THIS DETAIL. We never have a bucket that is public write. its rarest of the rare.
	so forget it.
	
	Just assume that we never upload object anonymously. at best we can just read/download it.


--------

BPAF->
	Default BPAF setting if bucket is created via any medium CLI, sdk, CFR is all are off
	Default BPAF setting if bucket is created via any console is all are on

---


Controlling User:-
													BPAF							ACL								IAMP							BP
	Root User								NO								YES								??								??
	IAM User								NO								NO								YES								YES
	AWS Account							NO								YES								??								??			
	Anonymous								YES								YES								NO								??
---

s3.upload  VS  AWS.S3.ManageUpload














--------------------------------------------------------------------------------------------------------------------------------------------------------------------
S3 security -	
    S3 provide you the two type of security for ant bucket/file	
    1. Encryption	
    2. Access level	



 Access Managment S3 :-	
 For Access managemet there is three level where the owner can decide the access of any S3 item	
  1. Bucket Policy: Ay Bucket level	
  2. Access Control List: at file/object level.	
    2.1. Public Accesibility of file.	
  3. IAM Policy

  Bucket Policy : -	
    BP is the way to define the accessibility of the bucket. The BP applied to all the object in the bucket.	
    Bucket policy can grant the access of bucket for certaion operation to other user, other account, user group.	
    BP attached to bucket and apply to all objevt inside.	
    BP cannot be attached to object inside.	
    This is simplay a json doc.	


 Access Control List :- 	
    The BP is applied over the Bucket, that give you quite higher level of access management	
    The ACL is applied over the object and bucket both. It define what user, user group, etc can have access to 	
    the underline object or buccket 	
    It gives you very fine grain way to manage access of any objct in S3 as well.	

IAM Policy :-
    ??????????????????????

 2.1  	
 Anonymus Public Accesibility [Special cass of ACL] :-    	
   The APA provide tou a extremly simpole way to make any file/object public, without digging into ACL.	
   It automatically manage/create/edit the attached ACL to make the file/objct anonymously accessible with #URL_2.	
   The first two kind of Access management (ACL and BP) tells you that if user/user group/account/role etc can do certaion operration	
   on the underline resource or not	
   APA will set up the ACL properly to make the file be accessible ANONYMOuSLY or not. mns will this file be accessible with #URL_2 or not.	
   VVIMP: You must stuck in your mind that 'Anonymus Public Accesibility' only and only deal with url '#URL_2'	



Block Public Access feature [BPAF]:-        	
  Above all 3 there is one more option lies, and this can (or cannot) override all the permission granted through either of above three	
  this is 'Block Public Access feature'.	
  This has power to deny the access granted through above 3, but do not have any way to grant acceess which is deny by above 3	
  This has a 4 option that you can select at a time of either bucket creation or from   	
        AWS > S3 > your bucket > Permisssion >  Block Public Access >  4 checkboxes. 	

  If you have checked all 4:-	
    It means you have blocked all the access to the public. this will completely override all the accesses granted throug 	
    either BP, ACL, APA. All the access are denied. ?????????????i doubt?????????	

 if all 4 are unchecked :-	
    In this case this permission filter is completely shut off. it wont deny any kind of access. So all the permission granted through	
    either BP, ACL, APA will be honoured. ?????????????i doubt?????????	

  Default value :-	
    By default the all 4 remain checked, so the bucket by default deny any kinfd on bublic access.    	

   How to set it:-	
    1.  For new bucket creation: U will see this 4 option in process of bucket creation flow	
    2.  For existing one: AWS > S3 > 'your bucket' > Permission > Block public access	
         Set the checkboxes.


 

------------------------------------------


ACL over Bucket :-

 prerequisite - 
    To make the ACL working for the bucket the first thing you have to do is to configure BPAF properly 
    for this you must UN-CHECK below two check boxes
      1. Block public access to buckets and objects granted through new access control lists (ACLs)
      2. Block public access to buckets and objects granted through any access control lists (ACLs)
    If this two is checked then your ACL policy will all be useless, The BPAF will deny all the access granted via ACL of this bucket
    
MAnaging Anonymus/Public Access via ACL of bucket :-
   When i say anonymus/public access, it means that accessing the content of bucket via #URL_2, without any login, authentication or authorization
   The type anonymus access you can give are 
    1.  List Object : getting the list of object in bucket, EG api A1,   
    2.  Write Object: Adding an item in the bucket, Eg api A2
  In simple world if
  ACL provide public permission = 'List Object', then A1 will work
  ACL provide public permission = 'List Object' and 'Write Object' , then api A1, A2 both will work
  Does write provide access to delete the object from content 
  No! dont know why. It provide way to add the object, change it also but not delete it.
  
  How to give this permission :-

  For existing one:-
     1. AWS > S3 > 'your bucket' > Permission > Access control list 
     2. go to 'Public access'
     3. Click 'every one'
     4. select the permissions in 'Access to the objects'
     Done
     OR
      AWS > S3 > 'your bucket' > 'your file' > Action > Make Public
  For new one:-
     For new upload: At a time of upload at permission page just chose 'Manage public permissions' to 'grant public read access'	
        [There is only 2 option to choose 'grant public read access' and 'do not grant public read access']	
        >> This will automatically select option 'List Object' but not 'write Object'
	

  MAnaging named/user Access via ACL of bucket :-
      Providng public/anonymus acceess of bucket is widely user ACL feature. ACL can also allow or deny the permission of certaion
      operation for Other AWS account, Grou, User etc. 
      But ACL itself is an LEGACY system, so aws do not recommend to overuse ACL.
      detail ??????????????????????
      So i am not going much deeper in ACL instead we will more focus on 2 widely use 
      IAM Policy
      Bucket policy
      
     
Block-Public-Access-feature(BPAF) and ACL conflict :-	
      Now you have 4 chack box in BPAF, 2 for BP and 2 for ACL.	
      So	
      The access granted by ACL could be overriden by BPAF, if the two check box of BAPF belongs to ACL are checked.	

      If you have checked 2 ACL checkbox of 'Block-Public-Access-feature':-	
        It means you have blocked all the Anonymuus public access granted via ACL. this will completely override all the accesses granted throug APA.	
        So api A1, A2, A3 will not work  	

      If you have un-checked 2 ACL checkbox of 'Block-Public-Access-feature':-	
        In this case this permission filter is completely shut off. So all the permission granted through APA will be honoured.   	
        So A1, A2, A3 will work	

     Scenarion #1: 	
      You have a bucket where Block-Public-Access-feature = 2 ACL un-checked (so block all public access via ACL turned off). 	
      and you have many files/object in this bucket that are either have APA = granted or APA = denied	
      So what happed if I change 	
          Block-Public-Access-feature = 2-ACL checked  (so block all public access via ACL turned on). 	
      - Here the 'Block-Public-Access-feature' will override the permisssions granted through APA. and so no one will be able to read the #URL_2	
     Scenario#2: 	
      You have a bucket where Block-Public-Access-feature = 2 ACL un-checked (so block all public access via ACL turned off). 	
      So what happed if I upload a and set APA = granted/denied ? 	
      Both case are fine, AWS system will let you do it. No error will come.	
    Scenario#3:	
      You have a bucket where Block-Public-Access-feature = 2 ACL checked (so block all public access via ACL turned on). 	
      So what happed if I upload a and set APA = granted/denied ? 	
      Only APA = denied, will work granted will give error, that is because you cannot upload the file with publicaly accessible setting 	
      when the bucket itself deny any public access.	
      Also what happen if i change the existing file/obect to APA = granted, The option will remain disabled actully.	
      You cannot set the file APA to publically accessible if bucket deny any public access.	     
     
     
Block-Public-Access-feature(BPAF) and IAM Policy conflict :-
	In IAM policy the access is granted to any principle, and this priciple has to be an IAM user, other AWS account, federated user
	ect. and they all have to to do the authentication/authorization. so all are nammed access.
	But
	The BPAF is design to deny[if checked] only and only ANONYMUS public access. The IAM policy never ever design to allow or deny the anonymus
	public access. So basically its impossible that they both ever have a conflict. 
     
     
ACL over Object :-
	????????????????????????

----------------------------
S3 and IAM Policy :-
    
    Predefined IAM Policy :-
        Whenever you creat an IAM user via root user or faderated user, and if you wants this user to be able to do certaion operation on S3
        then you must attach hime with a policy.
        There is two such IAM policy:-
        Scenaro#1 : assigm him none :- USer will not see any thing on his S3 home page.
        Scenaro#2 : attach him with 'S3ReadOnlyPolicy' - 
            He will be able to see the list of bucket. but not able to create new bucket or delete existing one.
            Will he be able to add/remove/delete the objects inside the Bucket in aws console:
                - YES! as long as ACL, BP, BPAF of that bucket are allowing it.
        Scenaro#3 : attach him with S3FullAccess: 
                He will be able to see the list of bucket. also able to create new bucket or delete existing one.
                Will he be able to add/remove/delete the objects inside the Bucket in aws console:
                    - YES! as long as ACL, BP, BPAF of that bucket are allowing it.
    Custom IAM Policy:-
        The above two AIM policy are very high level, 
		if you do not provide them then the IAM user will have no access at all 
		if you provide S3ReadAccess, he will have permission to read a lot of things.
		if you provided S3FullAccess, he will have all the accesses
		But
		What if you vwants to give user an access like
		  for some bucket no access at all,
		  for some bucket partial read access
		  for some bucket full access
		  for some bucket access to certain fuctionality only
		  for some bucket you wants to give some contitional access
		  .... etc
	    For this come an cutomized IAM policy. 
	    How to write this policy is not a scope of this tutorial. We will look iin it after AIM policy
	    so for now its ???????????????????????????????/
		

------------------------



S3 and Bucket Policy :-
	Thery both are same exept
		In The IAM policy the subject is USer/Principle which is fixed and Object if Resource.
		In The Bucket policy the subject is Resource which is fixed and Object if Principle/User.
	
	The Bucket policy is 90% same as IAM policy 
	The 10% diffrence are
	1. BP management happen in S3 pages on each indivisual S3 bucket
		- For IAM policy its management happen at IAM pages
	2. The 'Resouce' value in bucket policy is fixed and its value could be 'arn:aws:s3:::muftmpbucket/*' or 'arn:aws:s3:::muftmpbucket' only
	   That is because the subject of the policy is the Bucket not the Principal/User
	   That is why there the resource tage is indeed there but its value is fixed.
	   So
	   Recource tag: present but fixed
	   Principle:	 present
		- For IAM policy the the 'Principle/User' tag is not even present, when you attach a policy to any 'user/group/role' those
		  become the Principle/User.
		  That is because the subject of the policy is the Principal/User not the Bucket.
		  So
		  Recource tag:  present and variable
		  Principle:	 not prsent
	
	Once we finish the detail about IAM policy, then we will come for Bucket Policy
	So for now
	?????????????????????????????????????????/
	
	
Can Bucket Policy block the Public Access completely
Yes! there is a way but its not at all recomended. For thias you haver to do this - 

	{
	    "Id": "Policy1585571253140",
	    "Version": "2012-10-17",
	    "Statement": [
		{
		    "Sid": "Stmt1585571245236",
		    "Action": "s3:*",
		    "Effect": "Deny",
		    "Resource": "arn:aws:s3:::muftmpbucket",
		    "Principal": "*"
		}
	    ]
	
Principal": "*"  ---> Will here DENY the access of all the Action for all the users. and so you wont be able to to do anything either
			with named or anonymus access.
			So
			Best is to do the public access blockage via ACL/BPAF and nammed access lockage via BP or IAM policy
		- The above BP statement is so dangourus that if owner of the bucket apply it over bucket, The Owner himself will also lost
		   all the access of that bucket [from console too]
			
			

	
--------------------------

API of S3
AP Refrence :- https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html

  A1. ListObjectsV2
       Anonymusly get list of object in bucket
         GET https://muftmpbucket.s3.ap-south-1.amazonaws.com/   OR  GET https://muftmpbucket.s3.amazonaws.com/
         Return: an XML
        
  A2. PutObject 
    Anonymusly Add/Edit object in bucket :-
    POST http://muftmpbucket.s3.amazonaws.com/
    {
        key:        myfile.txt
        x-amz-acl:  ????????
        ...??????
    }
    
  A1, A2: Both of this api is Anonumus and any body can consume it without any identification.
  
        
---------------------

S3 and Identity Pool ????????????????/


    






