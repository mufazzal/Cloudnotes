The SDK is nothing but all the console function in the proramming form.

With the SDK you can do all those thing that youi do on AES console.

In nutshell its nothing but a simple lib in npm. 
  Just install Node, '
  install NPM,  
  Create node project via 'npn init'
  install 'aws-sdk' via 'npm i aws-sdk'
  DOne
  
You can use this any where in the world, like in your PC, in EC2, in AZURE-EC2, in google cloude,
Above step will install the node and install the dependency now comes the main part.

Any AWS-SDK, will first need the credential in form of  'Access ID' and 'Access Key' and you know where you get it.
So get it for the user that you wants to loging with AWS-SDK. This user mut be having the programatic Access.

#AWSSDK_AUTH_BY_KEY_ID
Now place its key and id at proper file :-
  in window-
    C:\Users\hussaimu\.aws  create file name 'credential' and paste this
    
        [default] ; default profile
        aws_access_key_id = pppppp
        aws_secret_access_key = lllll

        [personal-account] ; personal account profile
        aws_access_key_id = <PERSONAL_ACCESS_KEY_ID>
        aws_secret_access_key = <PERSONAL_SECRET_ACCESS_KEY>

        [work-account] ; work account profile
        aws_access_key_id = <WORK_ACCESS_KEY_ID>
        aws_secret_access_key = <WORK_SECRET_ACCESS_KEY>
        
        .....
   LAter AWS SDK will use this file for programmaatic access credential.
   
   
Now in the code you will have to use below 3 line to make the aws-sdk working
      var AWS = require('aws-sdk');
      AWS.config.credentials = new AWS.SharedIniFileCredentials({profile: 'Mufazzal_Hussain'});
      AWS.config.update({ region: "us-east-1"});
This lines are self explainatory. This is just like you login into the AWS console via ue AWS username na dpassword then select the 
region of your wish.

The above approcach of authentication via the Access Key and ID work everywhere. but its not at all recomendded to use in case of 
EC2 or Lembda. The best way to to authenticate is to via providing neccesary role to the EC2 or LEmbda.



   
