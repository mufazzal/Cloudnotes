Role:-
  Many AWS service can perform certain operation on other service like an 
    EC2 can put/post an image in S3, 
    the codedeploy can attach/dettach/terminate the instances,
    Lambda function can write logs in cloudwatch
    etc.
    
    If one service need to perform certain operation on other service then the called service must have permission to perform that operation on Calle service.
    This permission is given by the Roles.
    The Role is inherently design for the specific services so that it can do operation on certain other services
    
Now the role document tells you two main thing
  1. Who can assume that role. ie which AWS services like S3, CFT, EC2 can asume that role.
  2. What resources and action the candidate aws service can access.
  
  The first one is decied by Trust-Policy, every Role has the trust policy document whose formate is like below:-
    {
      "Statement": [{
          "Effect": "Allow",
          "Principal": {
            "Service": "ec2.amazonaws.com"
          },
          "Action": "sts:AssumeRole"
        }]
    }  
  By this we state that this role can be assumed by EC2s.
  
  The second one is decided bt typical IAM policy statement.
  
   Better and easier way to wrte Role CFL with yaml and json combined:-
   
                                          ASGHookLambdaIAMRole:
                                            Type: 'AWS::IAM::Role'
                                            Properties:
                                              Path: /
                                              AssumeRolePolicyDocument: !Sub |
                                                {
                                                  "Version": "2012-10-17",
                                                  "Statement": [{
                                                      "Effect": "Allow",
                                                      "Principal": {
                                                        "Service": "lambda.amazonaws.com"
                                                      },
                                                      "Action": "sts:AssumeRole"
                                                    }]
                                                }            
                                              Policies:
                                                - PolicyName: EC2WebServerIAMRolePolicy
                                                  PolicyDocument: !Sub |
                                                      {
                                                        "Version": "2012-10-17"
                                                        "Statement": [{
                                                                "Action": [
                                                                    "logs:CreateLogGroup",
                                                                    "logs:CreateLogStream",
                                                                    "logs:PutLogEvents"
                                                                ],
                                                                "Effect": "Allow",
                                                                "Resource": "arn:aws:logs:*:*:*"
                                                            },{
                                                                "Action": [
                                                                    "ec2:CreateNetworkInterface",
                                                                    "ec2:DescribeNetworkInterfaces",
                                                                    "ec2:DetachNetworkInterface",
                                                                    "ec2:DeleteNetworkInterface",
                                                                    "ec2:AttachNetworkInterface",
                                                                    "ec2:DescribeInstances",
                                                                    "autoscaling:CompleteLifecycleAction"
                                                                ],
                                                                "Effect": "Allow",
                                                                "Resource": "*"
                                                            }],
                                                      }          
   
------------------

  InstanceProfile:-
    This is a very special case. When a role is created for EC2 then with the role there is instance profile is also created.
    AWS CLI and CFR use the instance profile ARN(not Role ARN) for assigning the role to EC2.
------------------


Assuming Role:-
  You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. 
  if a user assumes a role, temporary security credentials are created dynamically and provided to the user
  For example, 
    - Grant users in your AWS account access to resources they don't usually have, 
    - Grant users in one AWS account access to resources in another account. 
    - Allow a mobile app to use AWS resources, but not want to embed AWS keys within the app
    - Give AWS access to users who already have identities defined outside of AWS, such as in your corporate directory. 
    - Grant access to your account to third parties so that they can perform an audit on your resources.
    
----------------

Trust Policy:
  this is resource-base-polocy for IAM role.
  It define what principle can assume this role.
  The principals that you can specify in the trust policy include 
   users, roles, accounts, and services.

