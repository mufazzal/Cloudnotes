
API Gateway Endpoint [Reaching ti API]:-
	When you create API [Not API resource] you can how user can reach to those APIs
	There is 3 way
		1. Regional
		2. Edge Optimized
		3. Private
		
		Regional:-
			Here the API are deployed to specific AWS region. Though user can access those apis from any where in worls but its faster for the user of the region  where this API lies.
			This is useful if you user are clustred in specifiv region.
		Edge Optimized:-
			Here AG utilize the Edge location for fast respionse to anywhere in the world. This is useful if you user are spread globally.
		Private:-
			This useful if you wants the APIS to be callable from your VPC only. It cannot be called form outside of VPC by public internet.
			This is very useful when you have many private component in your VPV which do not has the Internet but need to execute the underlined APIs.
			This is bit tricky and setting it up need some proper mechanics.
			At VPC side:-
				As we mentioned that VPC component may be private and do not has internet access so if they want to use the API Gateway for calling those API,
				They must use AG service by 'Service Endpoint' of AG.
				So create a Service end point in the VPC for AG.
			At AG:-
				At a time of creation of AG select the 'Endpoint' as private. There by restrict any public access of those apis.
				Now once created, then set up the rersource policy to selectivly allow which VPC can access those resources in APIs.
				
			So now no one from the public can use those api, but anyone in 	the VPC can call them[via VPCs Service Endpoint  of AG]. 
							
			
API Gateway Integration [forwarding request]:-
	This is applicable at resource level of API. 
	You can configure how a request will be handle for any resource of any methode type.
	You forward the request to
		Lambda
		HTTP
		AWS service 
		Private link
	Most of those forward are easy to understand but one of them is tricky that is 'Private link'
	
	
	Private link [Forwarding to Private VPC component]:-
		Suppose if you wants to forward the request to any VPC component then again you need a proper set up
		[Do No Confuse]: Private Endpoint means APi can be called from inside the VPC only. and Private Link is for forwarding the request to internal VPC component.
			Private Endpoint:  VPC to AG
			Private Link:			 AG to VPC
			How:-
				At VPC side:-
					If this VPC need to handle the integration with AG then it must must must have a working Network Load Balancer in it.
					So set up the NLB here.
				At AG:-
					1. Create the VPC link 
							Go to AG > VPC link
							Select the NLB created at VPC side
					2. Integrate VPC Link to apis:- 
							Go to AG > your apis > 'select resource' > integration
							select integration = 'VPC Link'
							slect the VPC link you created in step 1
							Also fill the Endpont value with DNS of NLB created at VPC side.
					Done.
				Now the request coming to AG [from anywhere] will be forwared to NLB of VPC.	
					
					
------------------

Usage Plan and API Key:-
	When you create a apis in AG. they can be public and people can use it for many number of time at any rate.
	Now suppose you wants to limit the number of request per second and total number of request for some set of users.
	say tou wants to give 5000 request call and 10 requets call max per sec for any of your client. How would you do it.
	For this use the 'Usage Plan' and 'API key':-
	Usage Plan:-
		Usage plan has 3 values:
			Rate: max request per secong after which request throttle.
			Burst: ???
			quota: Max number of request in given time preiod[day, week, month]
	API Key:-
		The api key is mapped to one and only one Usage Plane. 
	Source of API Key:-	
		At the time of request caller can sent the Api key at two places 
			HEADER: in the header 'X-API-Key'
			AUTHORIZER: use cutom lambda authorier and have it return the API Key in response agaibst key 'usageIdentifierKey'. 
		AG Setting:-
			You need to set this in setting at AG > your api > Setting, from which you will read the API key.
		No finally ar resource level:
			Go to 
				AWS > AG > APIs > your api > select proper api resource > Methode Request > 
				set API Key Required = true.
				So at this point you can set what resousrce need to have api key in request and wha not.
		
	One usage plan can map to many API Key. but one api key can have only one Usage plan
		
-------------

AG and Stage:-
	At stage level you can set below items for APIs [not api resource]
		- Caching
		- Default Method Throttling
		- WAF
		- Client Certificate
		- Stage Variable
		- Monitering mechanics

------------
API GEtway and Versioning and stage variable.
      

API key


Throttle Request

AG and EC2/RDS/DDB


AG api cache

AG request response interpretation       
   
   
