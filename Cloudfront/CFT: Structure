
Cloudfront Distribution
  [Aliases, CustomErrorResponses, DefaultRootObject, DefaultCacheBehavior, Enabled, Logging, PriceClass, Restrictions]
  |
  |------Origin
  |       |
  |       |-------------origin_static_website
  |       |-------------origin_elb_app
  |       |-------------origin_myserver
  |       |-------------origin_media_store
  |       |-------------origin_dummy
  |       [DomainName, OriginPath, Id, ConnectionAttempts, ConnectionTimeout, CustomOriginConfig, S3OriginConfig]
  |
  |
  |------CacheBehaviors
  |       |
  |       |-------------cache_behavior_origin_static_website  [PathPattern = 'site/*' id=<id of origin_static_website>]
  |       |-------------cache_behavior_origin_elb_app         [PathPattern = 'api/*' id=<id of origin_elb_app>]
  |       |-------------cache_behavior_origin_myserver        [PathPattern = 'apilegacy/*' id=<id of origin_myserver>]
  |       |-------------cache_behavior_origin_media_store     [PathPattern = 'images/*' id=<id of origin_media_store>]
          [TargetOriginId, PathPattern, DefaultTTL, MaxTTL, MinTTL, AllowedMethods, CachedMethods, CachePolicyId or ForwardedValues, Compress, 
            LambdaFunctionAssociations, OriginRequestPolicyId, TrustedSigners, ViewerProtocolPolicy]
  
    
  In a Bird eye view, the CDF dist has the multiple Origin and multiple CacheBehaviors along with a one DefaultCacheBehavior.
  Each CacheBehavior has two important param TargetOriginId and PathPattern.
  The TargetOriginId is mapped to the one of the origin in the 'Origin'
  CFT system will start matchint the CacheBehaviors[i].PathPattern with path of the requets that received at CFT domain.
  The first one who got the match, it TargetOriginId is now used to determine the target origin. 
  Now CFT will first look in its cache if it has the response of asked request in cache otherwise it will go to the origin whose ID match with the  
  TargetOriginId of the CacheBehaviors[i].
  If none of the CacheBehavior matches the path pattern criterion then it will be taken by 'DefaultCacheBehavior'
  The order of the CacheBehaviors is very important here. if the multiple CacheBehavior matches the PathPattern, then the first one will always win.
    
  When the request arrive at CFT like 'mufcft.cloudfront.com/<my path string>' 
  EG:-
    <my path string> === 'site/*'   The selected origin will be 'cache_behavior_origin_static_website'
    <my path string> === 'api/*'    The selected origin will be 'cache_behavior_origin_elb_app'
    
    
  The distribution has many setting which is applied over all the origins 
  
  CustomErrorResponses:-
    If CFT do get the error 4XX or 5XX from the origin server, you can mask this error with customize response. This give you good control for error handling.
    Here you have to specify:
      ErrorCode: The code that you wants to return to the viewer.
      ErrorCachingMinTTL: How long this error will be cached.
      ResponsePagePath: This will be the path of page that you wants user to show when the error for the origin is masked.
        This path is then passed form all the CacheBehaviors and once the pathpattern matched the customized error page is taken from that Origin only.
        
  DefaultRootObject:-
    If user requested the root of CFT, not a specific file EG: 'mufcft.cloudfront.com', This request will be sent to the origin of matching path pattern.
    But you can override this behavior for root access and return the other object.
    EG: DefaultRootObject: 'index.html'
    Now for root url the ruturn object will be mufcft.cloudfront.com/index.html. This url will also pass from all the cachebehaviour path pattern and the first one who matches, wins.
    When you create a new distribution, the value of Path Pattern for the default cache behavior is set to * (all files) and cannot be changed. 
    This value causes CloudFront to forward all requests for your objects to the origin that you specified in the Origin Domain Name field
    
    
  PriceClass:-
    The edge loacation of CFT is spread across the world. Depending on the budget you have you can choose to use some edge location only.
    For this AWS has created 3 group of Edge location 
    1. PriceClass_All: Use all the Edge location
    2. PriceClass_200: use 200 least expensive Edge location
    3. PriceClass_100: use 100 least expensive Edge location
    
  Restrictions:
    You can configure the distribution to either whitelist or blacklist certain countries from the disrtribution.
    This help you to either block some countries or to allow content in selected countries only
    CloudFront geo restriction feature to do one of the following:
      - Allow your users to access your content only if they're in one of the countries on a whitelist of approved countries.
      - Prevent your users from accessing your content if they're in one of the countries on a blacklist of banned countries.
    Geo restriction applies to an entire web distribution. 
    If you need to apply one restriction to part of your content and a different restriction (or no restriction) to another part of your content, 
    you must either create separate CloudFront web distributions or use a third-party geolocation service
  
  Logging:-
    You can set the to deliver the Access Log to the S3 bucket with this param. pass value of bucket and prefix.
  
-----------------------------

CFT and Error from Origin:-
  If there is a cache miss then CFT send requets to appropiate origin.
  and if origin akso give error then this error can be handled a CFT level.
  You can configure to handle the scenario of error from any origin at level of distribution for uniformity. For this use 'CustomErrorResponses'
  EG:-
      {
        "ErrorCachingMinTTL" : 3000,
        "ErrorCode" : 500,
        "ResponseCode" : 404,
        "ResponsePagePath" : 'ErrMuf/err-500.htm'
      }    
   It says that, if CFT recive Error code 500 from any origin then send the viewr the response code = 500 
   with response body from 'mufcft.cloudfront.com/ErrMuf/err-500.htm'
   So you also must properly configure the CacheBehaviour or DefaultCacheBehaviour to answere the Pathpattern 'ErrMuf/err-500.htm' 
   and you must either have
    - A single origin with all such error pages
        > The advantage of this approach is that you do not have to worry about each and every Cache behaviour and Origin in the distribution for error handling.  
    - Or every origin must be able to load the page 'ErrMuf/err-500.htm'.
        > You have to take care at each origin end.
  Also note that the error will be cached for 3000 seconds. so if your origin have resolve the error at their end the fresh response will be reflected only after 3000 sec.
------------------------------

IMP: CFT only support HTTP/S and RTMP. Not other TCP and UDP. For the you should consider Global Accelarator. 

