If you login to 'https://console.aws.amazon.com', you see 100s of operaion you can do here like sart/stop ec2, load s3,
operate on glacier. Basically all very high level operations on all aws features.

But this all done via UI.

What if you wants to do it via automation or via remote access.
For this comes 'aws-cli'

In very few word ->
  CLI + https://console.aws.amazon.com   =   aws-cli
aws-cli provide you the bunch of commands to perform many aws operation. 
The most imp use case of this is to write the shell script, that will allocate, invoke and terminate the aws resourses via 
automation at many level.

So how to use it :-
  Prerequisite:  
    1. You should have a aws accout.
    2. A user with 'AdministratorAccess' permission and and acceess type 'Programmatic'
    3. a linux/window pc with aws-cli installed (How? google it)
    
How to create such user (Prerequisite#2) : 
  This will be illustrated deeply in IAM topic but for now 
  login to aws console site -> IAM -> create user group with 'AdministratorAccess' permission
    -> create user -> select access type 'Programmatic access' -> select the group created earlier
    -> IMP save the user-csv file becoz this file has 2 imp keys for this user to login via aws-cli.
    
    This user do not have password, because this user do no have access type 'AWS Management Console access'
    
    
  How to configure aws-cli on local PC :-
    once user is ready and local machine has aws-cli installed
    open cmd/poweshell/terminal
    aws <command> 
    
  How to use :>
  As like any other CLI tool aws also provide lot of (1000+) commands to perform operation on aws items.
  
  Aws provide so much command that we can not dive in it in single doc. But for purpose of this doc u can use 'aws help'
  'aws ec2 describe' etc,
  
  All AWS tool like ec2, glacier, s3, codedeploy has set of their own commands. so see them in their respective chapter.
 
  if you wants to get help for commands of EC2, type  aws ec2 help
  --      --        --        --           S3   --    aws S3 help   
 
 
 IMP:
  SSH on EC2  VS  aws-cli :
  When you connect to EC2 instaance via SSH, you are actully performong operation on EC2 instance and 
  you working directory is the remote linux server, in you command window you see something like this
    ec2-use@12.44.45.23 $_
  But aws-cli is completely on your local PC, your working directory is also in your  PC
  in you command window you see something like this
  C:/user/mufazzal:> _
  
  EC2 user  VS  aws-cli user
  ec2-user is assosiated with SSH-EC2  , and he can play around only with its EC2 instance (like copy/delet/read file).
  But aws-cli user have lot more to do like pal with EC2, s3, codeploy etc.
   
  ec2-user can read file on ec2 instance but aws-cli user can not.
  aws-cli can terminate the EC2 instance but ec2-user can not.

  
  
  
  #AWS_CLI_AUTHENTICATE
    ????????????????????????
  
 ------------------
 
 AWS CLI commands with large data list output:-
  many aws command return the list od data. like listObject in S3 bucket.
  What hapen if there is large data.
  AWS CLI handle it internally. when you run the command AWS CLI internally can make more then one apis to get data in parts.
  for this it uses 'page-size' param. the command keep makeing the api calls to get data of the size of page till all the data is retrived
  once all is received then they all will be clubbed ogether to reprsent the user.
  You can chnage the value of pagae size by passing param '--page-size' in command.
  changung this will not at all impact any final output. it just make some changes in the internal call machanism.
  When to use:- when you are getting 'timeout error' or 'too many result' in output of any command.
  In case of --page-size, the final output remain same.
  
  
  For limiting the result in final output also you can use the param '--max-item' and '--starting-tokeb'. 
  this will do change the final output and implement the pagination. 
  
  
  
 ----------------
 Default Params:-
  For al the AWS CDL commands there are couple of default param you can supply which will override the cponfiguration from 'aws config' that is
  --region, --output, --profile
  
  
  
  
  
 
 
 
 
 
 
