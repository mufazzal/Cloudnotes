

		Consumer care		      	Vendor care
Data Center:	Hardware		Physical Hosting eviorment	:Everytime you need Hardware Upgrade, OS upgrade you have to call the Data center provider and tey will do:
IAAS		OS, Patches, Drivesr	Hardware			:Great that i do not have to worry about any hardware But I have to take care of its OS, PAtches, drivesr :		
PAAS		Application		Hardware and OS			:You just give the the code of your app and they will take care of all extra overhead: 
Serverless	Function		App load			:You just give small pices of code of your app : 

In all above three there is one thing common. You need a machine up and running all the time your app is live.
and whole things of the app has to be in running state all the time. so all the time you need either a server at data center or EC2 at aws up.
All has to be Up and running even though you do not really need anyting or something.

To solve this comes a serverless
In sercerless you tear down your application in very very small piceses. So small that you use a tiny function to define it.
This function sits idle somwhere in AWS without taking any kind of computing power. But when someone trigger it. 
It will automatically allocate EC2 for itself, run itself, deallocate EC2 and again go in idle state.
It will automatically scale up or down itself if load is high or low.
By this way you save lot of money by saving the idle running time of EC2.


Principle of Serverless:-
  1. You execute a single pice of code on demand and so use compute power for that execution only
  2. The single piece of code should be stateless
  3. Use push based event driven pipeline
  4. Thicked Front End
  5. Same serverless function can at multiple instances. So they can run in paraller


Serverless and the Grand issue of Cold start/Warm Up:-
	No matter what serverless env you use AWS-lambda or Azure-??? or google-???? under the hood they all work in same way.
	
	They all are container based. and instantiate the container when a lambda is triggered. 
	For each triggered lambda there will be one container created.
	Once lambda is finished. this container remain in memory of ecosystem for some time, this instantiarted but idle instance 
	of a lambda container is ready to user for any upcoming next lambda(same type) trigger.
	
	So It create the two big prolem
	1. If a container of previously triggered lambda is used then how could it be the stateles?
	2. Warm up/Cold start.
	
	
	Warm up/Cold start: This is the biggest bottelneck of serverless. 
		When you craete lambda in aws system and save it. its just a template of enviorment-code-resources-files.
		At this moment when its not yet instantiated at once, its just and zipped-code not executable.
		Now when the first time its triggerd then a 
		new container is created 
		then zipped-code is copied in that container
		then code is unzipped, configured, compiled 
		and finally intiantatiated
		And then the lambda is ran.
		
		After the execution finished this Lambda-container remin instantited for some time (5 mnt for AWS) and then it destroyed.
		So at a moment it is possible that there is couple of ready-to-use instantated container remain in memory 
		OR
		no single ready-to-use instantiated container is there
			Again the condition of no single ready-to-use conatainer can appear in two scenario
			1. LAmbda usage is very high at a moment and any free container got reused immediatly and so no exra left
			2. LAmbda usage is very low at a moment and any free container got destroyed to longer idle waiting time.
		In both of this condition when no ready-to-use container left for reuse the problem of warm-up or Cold-start appear.	
				
		Cold-start / Warm-up: This problem appear when a lambda function funtion got a trigger but due to no container 
			the syatem first has to create the container, set the runtime enviorment in it copy the code and run any script if needed.
			This whole process is time comsuming and so user face big delay.
						
		This problem appear in all serverless system. all of those provide some way to mitigate it. we will see later how.
		As a developer at his side he can set some larm to triggr some lambda so that couple of container instantiated 
		in each interval.
		
		
		
		
		
			
		
	
	
	
	
	
	






