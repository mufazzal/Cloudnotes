Lambda is the smallest unit of code that can run as serverless on AWS system.

Lambda and IAM Role:-
  You have to assign a Role to ypur lembda function. and tahe role must have a permission 'AWSLembdaExecute'.
  Along with this yous should also assign the permission if you wants to access/change/operate any other AWS service
  So create the Role you wants first
  
Creating the Lembda:-
  1.  Compute > Lembda > Create Lembda
  2.  input the name and desc
  3.  Choose Role you created earlier
  4.  Chosse runtime like Node, Java etc.
  5.  either write code or upload the ZIP
    5.1 if file is ZIP then you must specify 'Handler' as <fileName>.<functionName>, which will be placed at root of ziped folder
  6 Also set the env variable if required {eg. if runtime is Node then you can use process.env.<envVarName> in the code and set its value in AWS console}
  Now you are done with the code But when this little pice of code will ran ?
  Next! Lets set the trigger for this Lambda
  7. AWS COnsole > Lambda > Functions > select your lambda function > configuration > Add Trigger
  8 Now here the configuration of trigger is done. This is very abstract topic and you can set up diffrent AWS service to trigger this 
    function for you
    E.G : you can Select S3, then select the bucket in it and set the event like upload, delete, edit file to trigger this event
  Done
  
 Setting up envirment vasrible:-
  You can use the env variable in the code and supply its value via aws console.
  EG: in node runtime-
    ...
    if(process.env.isprod === tru)
      ...
    now set the value of 'isprod' in aws console simply.
  
 ---------
Q:  How many lambda can be call cocurrently
A:  1000
-----------------------------


Cocurrency:-
  In AWS lambda there is overall limit for number of paraller execution count for any aws account and that is 1000
  It means combining all lembda function the max possible run at a time is 1000.
  if more lambda execution are requested then it will be denied and a response with 'TooManyRequestException' error with code 549 will be received.
  VIMP : this limit is on the account across all the lambda not for each lambda.
  
  Reserved Cocurrency:-
    As you know there is a limit on overall account and so on all the lambada combined. 
    But lets say there is some funcvtions that you think are mission critical na dyou wants them to when needed.
    But you knw that there is a overall limit.
    To solve this we can reserve the cocurency for those function. This will actully keep some cocurucy reserved for mission critical lambda
    How:
      AWS > Lambda > 'you lambda' > in section Concurrency set the value of reserved cocurency.
      The rest of the cocurrency will be left for the rest of the lambda functions.    
    
   Q: Can you increase the account level reserve from 1000?
   A: Yes, but for this you have to raise the support ticket at aws.
    
    
---------


Lambda and VPC:
  By default lambda has no relation with any VPC(imcluding default VPC).
  Lambda in itself is a small piece of code that that execute on demand. in itself it is not a node like EC2 or RDS.
  Lambda do not lie in any VPC. and Lambda cannot have any Public or Private IP address attached to himself.
  BUT
  what if you nmeed to communicate with any node lie in VPC via lambda.
  EG: you wants to read the data from RDS which lie in a subnet of VPC, or you eabts to run a api hosted on EC2 lieing in VPC

  There is two possible scenarion
  SC1. The node (EC2, RDS etc) of VPC you wants to communicate lies in Public Subnet
        - In this case you do not have to do anything. becoz if node is in public subnet then it accessible via internrt and 
          you can simply communicate with then with public IP of those nodes.

   SC2. The node (EC2, RDS etc) of VPC you wants to communicate lies in private Subnet
        - This is tricky. If node is in private subnet then lambda also has to execute in VPC.
        
   Again two possible solution     
   we can host the Lambda in public or private sunbnet     
        
  sol1. Placing the Lambda in Public Subnet:-
          You can place it in public subnet but in that case lambda will not be able to access the public internet.
          Why
          Because even though the Lambda function is running inside a public subnet of a VPC, 
          But the Lambda functions do not, and cannot, have public IP addresses. 
          You cannot send traffic to the internet, via the VPC's Internet Gateway, 
          unless you have a public IP. You would need to route through a NAT Getway.
          Lambda in public subnet can only access the nodes lieing in VPC not the internet. so its vert limiting.
          
   sol2: Placing the Lambda in Private Subnet without NAT getway:-           
          This is again of no use becoz private subnet without NAT getway cannot access the internet.
          
   sol3: Placing the Lambda in Private Subnet with NAT getway:-         
          This is perfect. here you can access all the nodes in VPA as well as the internet in the lambda function.
          
   How could i implement sol3?
   You will need
    - For NAT getway to exist you must fiest need at leat one public subnet.
    - A Private subnet with NAT getway attached to it
    - Security Group: This security group is wraped arroud the lambda so it should have proper inbound and outbound rule.
                        Generally lambda dont need any inbound rule as it is not like any server or DB which has an IP address.
                        and outbound should open to all internet.
                        So default VPC group is enough if you do not wants to restrict anything.
    - Execution Role: You know that lambda has a role. If you wants to put a lambda in VPC 
                        then the lambda should have the policy 'AWSLambdaVPCAccessExecutionRole' attached to it. 
    
    
    Steps:-
      1. AWS > LAmbda > you lambda function > go to VPC section > Edit
      2. set VPC connection to 'custom'
      3. Choose VPC
      4. Choose private subnet lying in that VPc. (choose at least two for high avilability)
      5. Select Security group ????????????
      6. Create a Role for the Lambda which has following polocy attached
          'AWSLambdaVPCAccessExecutionRole'
          TIP: You can create and assign it simply by using the template at
                6.1 AWS > LAmbda > you lambda function > Permission > Execution role > Edit
                6.2 ????????????????????
      7. Done.
      
      Now you cann access internet as well as all the private node lying in VPC.
      
      What happen in backgroud:-
        The step above are fairely simple but inside the aws it make lot of changes.
        When Lambda attach to any VPC, the AWS system actully use 'Elastic Network Interface' to create a network aroud the lambda 
        that connect the VPC. 
        To create this network tha lambda must need the permission 'AWSLambdaVPCAccessExecutionRole'
        Also once wrapped via ENI, the lambda also behave like a Node in network, simillar to EC2 or RDS.
        So any node the AWS network must have a security group that can tell what destination are safe for inbound and outbound communication
        
        
        
        
      
      
  -----------------
  
  

Pricing :-

scaling:-












