This is monitering PERFORMANCE in services for all your AWS resources and Application
It can monitor EC2, S3, Auto scalling  Group, ELB, Route53, EBSs, Storage getway ETC.

Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real time. 
You can use CloudWatch to collect and track metrics, which are variables you can measure for your resources and applications.

With this data in CW you can
  - Create the Custom dashboard for monitering
  - get statistics grapf for system performance
  - Create alarm and notification for specific CW event
  

Concept:- 
  To understand the CW you must know nelow terminology
  
  NameSpace:-
    This is the top level sagregation of monitering data. The data are partitioned in this name space are isolated from eachother
    AWS has unique CW Namespace for each AWS Service
    EG:
      EC2: AWS/EC2
      S3: AWS/S3
      Lambda: AWS/LAmbda.
  

    
  Metrics VS Dimention:-
    Metric is the param to be moniter
    Dimension is the way to filtering and indexing those Metrics.

    Metrcis data keep on generating till AWS resource is there.
    Dimesion is the chrachtristic, assosiated at the time of that AWS resource created/Updated.
    
  

    
    
-------------------

CW Agent:-

  
---------------

CW Alarm:-

  Creating Alarm will need below item to set
  Related to Metrics:-
    - Metric
    - Dimension
    - Statistics [Average, Min, max, Average, Sum, count]
    - Priode: you specify priode on which the CW collect The 1 data point.    
  Related Alarm to bell:-
    Condition:-
      Greater the, less then etc.
    Evolution Priode:-
      The number of data point that should be conside for evaluating the alarm state.
    Datapoints to alarm:-
      Number of Data point that must be breached in the frame of 'Evolution Priode'
    Missinge Data:-
      In case in any priode the data point is not avialabe then you can treat this miss as:
        - MAintain alarm state
        - Breach
        - No Breach
    EG:-
      Priode = 1 mnt
      Evolution Priode = 5 
      Datapoints to alarm = 3
      So The CW will create a Data point in each 1 mnt. After every 5 data point alarm state will be evaluated.
        Now if number of Breached data point >= 'Datapoints to alarm' then simply put the alarm in Ring state otherwise let it remain OK.  
      
  
  Related to Action That you wants to take:-
    Based on CW, You can create the specific action to be taken id Alarm is on.
    CW is nativly integrated with 3 AWs service and so can take action on those
    1. SNS: CW can send notification to the SNS topic
    2. EC2: CW can directlt start, Stop, Terminate or Reboot the instance without needing any lambda.
    3. ASG: CW can take some action on Auto scalling group too directly.
      Actions for EC2
        stop, terminate, reboot, and recover
      Action for ASG
       
  
  IMP: Lambda is not directrly integrated with Lambda. you have to use it woith SNS.

---------------  

 Time or Rate based CW event:-
  You can create rules that self-trigger on an automated schedule in CloudWatch Events using cron or rate expressions.
  This trigger in interval like
  once a day
  once a month
  once a week etc.
 
 -----------------
 
 
 
 Billing Alarm:-
  It can be created only in us-esast-1. and you can create against whole account or for a specific service.
 
--------
 
CW Log Export to S3:-
  You can simply export the CW logs to S3 and do analysis over there. You can set a CW cron job to do it on regulae interval
  Though it is not real time.
  
CW Log Subscription:-
  You cause susbscription for getting near real time log data.
  For this your subscription client be
  - Alambda
  - KEnesis firehose
  - KEnesis stream
  
 
--------

Access Logs AWS give in hand:-
  LB
  Cloudtrail
  S3
  Route 53
  VPC access log
  
--------
CW Event + Cloudtrail:- 
  For all the AWS serices there exist a event type = "AWS API by Cloudtril" and you can use it to responde on 
  any api call( except Get, List, Describe) done on that service.
 
 
 
      
      
      
    
 
          
      
      
      
 
 
