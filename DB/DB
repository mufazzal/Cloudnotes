AWS give us the way to integrate RD(Relation Database) and NRD(No Relation Database) DB both

Supporting SQL DB:
  SQLSever
  ORACLE
  MySql
  PostgresSql
  Amazon Aurora : amazon itself
  MariaDb
  
  The AWS provide 'RDS' (Relation Database Service) for integration of RDB
  
  Key feature of RDS
  1. Multiple AZ: For disator at one AZ will save you from complete loss
      If anything happen then aws automatically rout to another AZ without even restarting anything
  2. Read Replica: for performance boost AWS keep multiple read only copy
      AWS write the one DB, and may keep multiple copy for fast reading
  it best for OLTP (Online Transaction platform) databse        
      
      
  NoSqlDB:-  
    AWS provide its own NRD: DynamoDB
    
  Data Warehousing: 
    Database is a central comp of any app. so the production DB shopuld always be fast and swift to generate result of query.
    Generally application run the small queries on the DB but analytics work run very complex and time taking query.
    
    So for best practice we keep prod DB isolated from Analytics work
    For analytics we use another DB and system, Thats called data warehousing 
    
    AWS tool for Data warehousing: RedShift
    RedShift is suitable for OLAP (Online Analytics platform) databse    
    
  Caching: 
    AWS also provide a way to cache the DB in the memory. So retrive the data from memory instead of a disk
    this is mostly use for frequetly identical query (eg. Select * from todaysTop10Song)
    YOu can use it as caching layed in front of:-
      RDS
      DynamoDB
      EC2 database
      Session data
      etc.
    
    AWS tool for Caching: ElasticCache
    
    RDB                 RDS
    NoSql               DnnamoDB
    Data Warehosing:    RedShift
    Cache:              ElasticCache
    
    IMP: Elasticache and DDB-DAX is in-memory db. not DDB
-----------------------------

  AWS DMS [Database Migration Service]:-
    This is the fully managed AWS service to migrate between 
       > AWS-cloud to On-Premise
       > AWS-cloud to AWS-cloud
       > AWS-cloud to On-Premise
       > On-Premise to On-Premise
  - in a nutsheel DMS nothing but a EC2 instance running a Replication software. This instance is called Replication instance.
  
  High Level Step:-
    1. Create a replication server
    2. Create source and target endpoints
    3. Create one or more migration tasks to migrate data
  Thereis 3 phase of migration:-
    1. The full load of existing data: 
          Data are moved from spource to destination. and any ongoing chages in source data are cached in replication server
    2. The application of cached changes
          Once first phase finis, it apply the cached changes to target DB
    3. Ongoing replication
          Now any ongoing changes will be applied to target as transacction
  
  Below are the possible source 
    On-premise or EC2 database
    MYSQl, Oracle, PostrgressSql
    Azure DB
    RDS
    S3
  Below are the possible source 
    On-premise or EC2 database
    MYSQl, Oracle, PostrgressSql
    RDS
    S3
    Redshift
    DynamoDB
    ElasticSearch
    Kenesis
    DocumentDB    
  
  it support homogenous[eg SQL -> SQL] and heterogenous[SQL->Aurora, SQL -> Oracle] heterogenous.
  for heterogenous heterogenous you will nedd SCT (Schema conversion tool)
  With SCT you can migrate in between Sql to NoSql, chnage DB engine etc.
  

---------------------

  EMR [Elastic Map REduce]:-
    This service is used for Big Data Analytics. This is in compition wuth Apche Spark etc.

----------------------

AWS Neptune:-
  This Fully managed GraphQl Solution from AWS.
  This is design to store the dfata set with very high degree of relationships.
  This can be used for storing Social MEdia connectivity relations or faimily tree relations.
  The core of Neptune is a purpose-built, high-performance graph database engine. 
  This engine is optimized for storing billions of relationships and querying the graph with milliseconds latency
  
  

    
