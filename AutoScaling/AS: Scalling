Amazon EC2 Auto Scaling provides a number of ways to adjust scaling to best meet the needs of your applications.

Limit of Capacity:-
  The the ASG you define the Min and Max value of capacity. No matteer how you scale in or out the ASG. 
  Number of instances will always remain in between this two. if you try to launch more or less instance in the ASG then the request will fail.
  Use this if you wants to set the range of number of instances.

Desired Capacity:-
  All the scalling play around this value only. Its value can neever goes above or below of min and max va;ue of capacity.
  This value
    - Set first at a time of creating the ASG. The ASG wil launch this much instances in the beging.
    - Later it can be changed manually toincreace or decrease the capacity
    - Later it can dynamically changed via 'Dynamic Scalling Policy' to meet certain policy criterion
    - Later it can dynamically changed via 'Schedule Scalling Policy' to meet certain capacity of certain time frame
  So number of instance(=desired capacity) remian in between min and max. and it keep changing via Manual, Dynamic or Schedule scalling.  
  Use this if you wants to set the fix of number of instances. correct -> Desired = 10, incorrect -> min and max = 10 

Scalling Techniques:-
  No Scalling:-
    Here you do not wants to increase or decrease the capacity. so you just set the desire capacity and done.
    Now ASG will keep rolling own the UnHealthy instance and replace them with new one.
  Manual:-
    - You set the desired capacity by yourself whnever you need to increase or decrease the capacity.
    - You can also remove or attach the instances manually from ASG. remeber if this operation set number of instance above or below the max and min capacity then requets will fail
      The added instance must lie in AZ that is part of ASG and must not be a member of another Auto Scaling group
      How:-
        Simply set the desired value in ASG.
  Scheduled:-
    - Scheduled scaling allows you to set your own scaling schedule. 
      For example, let's say that every week the traffic to your web application starts to increase on Wednesday, 
      remains high on Thursday, and starts to decrease on Friday. 
      You can plan your scaling actions based on the predictable traffic patterns of your web application. 
      How:
        To set this you have to create the schduling action in the ASG. in this Scheduing action you must set 
         - Date and Time frame
         - Min, Max, or Desired capacity for that time frame.
         - Recurence or on-time
        
  Predictive Scaling
      Predictive Scaling, a feature of AWS Auto Scaling uses machine learning to schedule the right number of EC2 instances 
      in anticipation of approaching traffic changes. 
      Predictive Scaling predicts future traffic.
      Predictive Scalingâ€™s machine learning algorithms detect changes in daily and weekly patterns, automatically adjusting their forecasts
  Dynamic Scalling[Scalling Policy]:-
       See 'AS : Scaling: Dynamic Scaling.txt'
          
---------------------------------

 Termination Policy:-
  Termination policy detrmine which instance will be terminted first in case of Scale-In. 
  AWS use default policy for this but you can customize some of his behaviour.
  
  Below isthe steps for determining the instance for termination-
    1. Detemine if there is Imbalance in the AZ. 
        if yes then apply the step 2 on the instances running on AZ which has higest number of EC2 running
        if no then apply step 2 to all the instances running in all tyhe AZ.
    2. Amonsg the instahnces selected in step 1, 
        2.1 Determine which instance if terminated then the Allocation stratagy for Spoty or On-Demand will remian aligned.
        2.2 If in step 2.1 all remian same then it determine which instances has the oldest Lauch Template or Laucnh Configuration
        2.3 If in step 2.2 all remian same then detemine who is closest to the next billing hour
        2.4 If in step 2.3 all remian same then close one among then randomly.
    IMP: All above rule are apllid on Instance who do not have 'Scale-In Termination Protection' Enabled. because those instance can be terminated in scale-in.
    
   Customizing Termination Policy:-
    You cannot cusomize the step 1 but you can customize the step 2 with below option:-
      DEfault
      AllocationStrategy
      OldestLaunchTemplate
      NewestInstance
      OldestInstance
    
    
--------------------------------- 
 Scale-In Termination Protection:-
  You can enable it so that ASG will not terminate the isntance evenv if any policy or schedule instruct it to do.
  Though it canot protect againts:-
    1. Manual termination through the Amazon EC2 console
    2. Health check replacement if the instance fails health checks
    3. Spot Instance interruptions
    
  

  
  
  
