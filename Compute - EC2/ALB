Application load balancer is way too useful and easy to use.

ALB support only two protocol HTTP and HTTPS (not TCP)
Supported Port: 1-65535

The ALB can route the traffic to desired target after checking underline requets params.
ALB work at Application layer so it has exposure to lot of request detail.
ALB has set of rule and each rule has three part
  - Prority 
  - Condition
  - Action
ALB must have one default rule that will have least priority  
The rule with higher priority execute first and then the lesser one. 

Action:-
  Once the condition is matched, ALB can perform below action
  ALB can redirect the request to 
    - fixed-response
        The ALB will return the status code (2XX, 4XX, 5XX) with messageBody. 
    - target
        The ALB will redirect the traffic to EC2 target group
    - redirect
        Will redirect to another url
        
Rule condition:-
  ALB can route the traffic based on one of below item in requets. You can use only one of then in each rule.
    host-header
    http-header
    http-request-method
    query-string
    source-ip
    
 You can take the diffrent action based on the condition match with gived params.
 
 see
 https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html


 When ALB redirect the traffic to other target like EC2 or url, the designated target will take the ALB as source
 so the IP, port and protocol he receive is of ALB
 Then how could the destination will know the Ip, port and protocol of orognal client
 For this the ALB add three extra header in request
    X-Forwarded-For
    X-Forwarded-Proto
    X-Forwarded-Port
This three will have informarion about how the client connected to the ALB
 
 
 ------------
 
 The ALB do the filtering at two stage:-
  First at Listener level based on Protocol and Port [AWS::ElasticLoadBalancingV2::Listener]
  Second at Listener Rule level based on [AWS::ElasticLoadBalancingV2::ListenerRule]
    host-header
    http-header
    http-request-method
    query-string
    source-ip
  Once both are passed then the desired action will be taken.
  
  
  What if first filter not passed EG. the port and protocol of request in not passed
  - then the request goes to not honoured.
  What if second filter doens nor pass
  - then every first filter has the default action that will be performed.
 
 Can a request satisfy two first pass:
  impossible because set of port and protocol is unique amont al listener.
 Can a request satisfy two second pass:
  Yes. but they ran in order of priority so the first one who has high prority win.
  
  
It strucre like belo
  ALB
    Listener1 [HTTP:80]
      - Rule 1
        - Actions
        - Conditions
        - priority
      - Rule 2
        - Actions
        - Conditions
        - priority
      - Rule 3
        - Actions
        - Conditions
        - priority
      - Default Action
    Listener2 [HTTP:3000]
      - Rule 1
        - Actions
        - Conditions
        - priority
      - Rule 2
        - Actions
        - Conditions
        - priority
      - Rule 3
        - Actions
        - Conditions
        - priority
      - Default Action      
  


-------------------------


ALB  vs NLB :-
  ALB work on layr 7 and can use many HTTP params port, protocol like ip, header, quertstring etc for action to be taken.
  NLB work on layer 4 and so can use only port and protocol for taking action. no other param can be used
  So its clear that in NLB you can use only  Listener with default action  but not the listener rule because you can use only first filter with port and protocol.
  
  NLB can have the static IP and can be assigned with EIP. not possible with ALB.
  
  ALB:-
    rout the traffic to listener by port and protocol and then take action based on rule in the alistener
  NLB
    rout the traffic to listener by port and protocol
 

  NLB structure
   NLB
    Listener1 [TCP:22]
      - Default Action
    Listener2 [TCP:456]
      - Default Action   
 
