EBS:-
	The EBS is like a Hard disk device attach to the EC2. This is Raw formatted BLOCK STORAGE. 
	The EBS is the Memory attached to the EC@ at extremly nearest location.
	The EBS can be used (without any alternative) for installing OS, DB, Software on EC2 machine.
	An EBS can be attach to ant EC2 that lie in same AZ only. 
	becoz it need to have extremly low latency between EC2 processer and Physical EBS device.
	EBs is very useful in system where you need lot of read and write(by throughput) on certain DB or filesystem.
	
	Why not S3:-
		S3 is suitable for storing objects. and it have way to low throuhput and high latency when compare to EBS.
		
	Type of EBS :-
		1. SSD
				1.1 GP2 : General Purpos SSD:- 
						balanced price, good performance
						Best for : general purpose, Virtual desktops, System boot volumes, Development and test environments
				1.2 IO1 : Provisioned IOPS SSD:- 
						Highest performance, High price
						Best for: mission-critical, low latancy and high throuput work. best for main DB's of your app
		 2. Megnetic
				2.1  ST1 :  Throughput optimize 
							Low cost - frequently accessed
							Usage: Streaming workloads requiring consistent, fast throughput at a low price
							EG. Big data, Data warehouses, Log processing
			 2.2   SC1 :  Cold HDD  
							Lowest cost - less frequently accessed 
							Best for file server.	
			 2.3 	 EBS Magnetic:
			 					Legacy

			IMP:-
				SC1 and EBS Magnetic cannot be used as root device. 

			#							GP2								IO1						ST1									SC1
			IOPS					3 to 16000 IOPS		64000 IOPS		500IOPS
			Throughput		250MiB/sec				1000MiB/sec		500MiB/sec
			Multi-attach	No								Yes or No			No	
		
		
		Encryption:-
			You can choose to encrypt the volume at time of creation. the snap created from encrrypted are also encrypted.
			you can use AWS managed CMK or cutomer managed CMK for encryption.
		
		Monitoring:-
			Performance metrics, such as bandwidth, throughput, latency, and average queue length is free in cloudwatch.
	        On EC2 termination: 
                        The root EBS device is by default deleted.
                        BBut any other EBS device will not be deleted by default.


Volume:-
	The volume is actual Hard disk in the system. 
	You can create volume either from snapshot or without it.
	The Volume is ready-to-attach hardisk device that can be attach to Ec2. 
	
	EC2 region and Volume Region:-
		Both of them are created in AZ of your choice. both of them must lies in same AZ otherwise there will be hell of the latancy
	
	Root-Volume:-
		When you create a EC2 the root volume will automatically be created. you can though change it if wants.
		
	Creating Volume:-
		you can create the volume with below choices
		1. AZ: where you wants to create it. remember you will be able attach this volume to only EC2s which lie in this AZ.
		2. EBS-Snap: if you wants you can choose the snapshot to get the initial data.
		3. Type
		4. Size
		5. Encryption
	When you create a volume but do no attah it to any EC2 it like you buy a Hard disk but not attachh it to Computer.
	You will be charged for allocating EBS wrt its type and storage. 
	
	Changing Volume configuration:-
		you can dynamically increase size, modify the provisioned IOPS capacity, and change volume type on live production volumes.
		You do not even have to detach the volume ot stop the instance
	
	Attaching Volume:-
		For attaching you will need below things-
			1. the volume id: The volume that you wants to attach.
			2. Instance Id: the instance on which you wants to attach.
			3. Device:-
					The device is the mount point where the HDD will be mounted. this is like the entry point for this disk.
					The list of avialable mount points are at
						https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html
					most of the AMI we use are HVM(not PV) and attached HDD are EBS (not instance store) so the range of device mapping are
					/dev/sd[f-p]
					For root device the resrved lovcation are generally
					/dev/sda1 or /dev/xvda
					But it could vary by AMI type.
				- EBS volume can be attach only on the stopped instances.
	
		Detaching Volume:-
				If ES device is root then you first have to stop the instance then detach it.
				if it is non root then you do not have to stop theinstance
		
Instance Store:-
	The alternative to EBS-Volume is to Instance Store.
	With any Ec2 you can either use Instance store or EBS. not both
	This is the Ephameral storage of Ec2 instance. this exist only when EC2 is in start mode.
	The Ec2 with instance store as root cannot be stoped. it can either be start or terminated.
	once terminated all the data in the EC2 instance store will vanish.
	Instance Store can be attach ata time in EC2 launch only. it cannot be add later.

Multi Attach Enable Volume:-
	There is way to anable the multi attach so that we can attach the single EBS to multiple EC2.
	It Enables you to attach a single Provisioned IOPS SSD (io1) volume to up to 
		16 Nitro-based instances that are in the same Availability Zone
	- Multi-Attach enabled volumes can't be created as boot volumes
	- You can't enable or disable Multi-Attach after volume creation.
	-	You can't change the volume type, size, or Provisioned IOPS of a Multi-Attach enabled volume.


Full process of create->attach->mount->[In Use]->unmount->detach->delete the EBS volume on EC2-linux>
		see 'EBS - linux full cycle.txt'

EBS Snapshot:-
	You can take the snapshot of any Attached EBS-volume at any point of time. The snapshot is just a bit-by-bit copy of 
	attached volume. this copied file then stored in S3 with some special formate.
	The snapshot will just preserve the state of EBS at the point of taking the snap.
	The snapshot are stored in S3(in the same region) but can be viewed in Ec2 > Snapshots.
	How to make it-
		EC2 > EBS > Snapshot > Create
		Here you can create by Instance or by Volume.
		IF you choose 'Volume', then a copy of that EBS volume will be created in S3.
		Volume belongs to a single Disk so a one and only one snap shot will be created.
		IF you choose the Instance then, the instance can have multiple EBS(root + other) attached to it.
		So here you can create snapshot of each of them or select from it.
		So one or more than one snap will be created.
		
		Snapshot is mapped to EBS disk. not the EC2 instance.
		
		By CLI:-
			use command 'create-snapshots' for creating via EC2 instance
			use command 'create-snapshot' for creating via volume
		
		EBS Snapshot and Region:-
			You can create the napshot from the EBS-Volume, from EC2 itself or from another EBS-snapshot. 
			The snapshot created from those will stored in S3 and avilable to the region of its creator device(EC2, Volume, EBS-snap).
			Now you can create the volume from that newly created snapshot in any AZ of that region.
			Though you cannot create the volume in another region from this snapshot.
			How to do cross region EBS replicatiion:-
				For this you first has to copy the snapshot in another region first then use the copied snap to create the EBS-Volume.
				
		snapshots are incremental:-
			It means that each time you create a snapshot of a volume t any point of time. the delta changes in the data
			will be allocated to new memory. rest of the data which are same as previous snaps are actully refered to those 
			previous snap only.
			See at https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html#how_snapshots_work
		
EBS-Snapshot VS Volume:-
	The EBS-Snapshot is the photo or bit-by-bit copy of volume at a time of taking that snap. This is stored in S3 but managed in Ec2.
	The Volume is the real hard-distk device that either attached toEc2 or ready-to-attached to EC2.
	


-----------------

IOPS Calculation for EBS:-

	GP2 IOPS:-
		GP2 is useful when you do not know the load on your database. 
		The IOPS of GP2 disk depend on allocated disk size [not used disk szie]
		For higher storage allocation you will get more IOPS.

		Minimun IOPS you will get is 100 IOPS.
		So if your allocated storae is  < 33.33 GB then you will get 100 IOPS.
		after that you gate 3 additional IOPS for each 1 GB allocation.

		So performance of your RDS instance increase with allocated size.
		See table for detail:-	
			Storage		storage*3		IOPS allocated
			1							3					100
			5							15				100
			30						90				100
			33.33					100				100
			100						300				300
			200						600				600
			500						1500			1500
			1000[1TB]			3000			3000
			2TB						6000			6000
			5TB			 		 ~16000		 ~16000


		What if you need more IOPS performance then allocated. 
		In that case IOPS Credit comes in picture.
	
	IOPS Credit:-
		When your RDS instance is created you will get the 5.4 million IOPS credit.
		This credit get used when limit of allocated IOPS reached for RDS instance.
		Now the IOPS balance will also start to accumlating for each second the RDS is up and running.
		So if	
			rate of accumlation > rate of depletion then you may face latency at some point of time as your all iops credit get finish
				and you stuck to baseline performance.
			rate of accumlation < rate of depletion	then you may be using more IOPS rate then allocated but yet system will remain healthy.

	Provisioned IOPS:-
		IF you need the consistent IOPS capacity and do not want to rely on all those if and buts.
		Then simply use Provisionde IOPS. This will cost you high but give you consistent performance.
		You can select how much IOPS you need,
		Maximum IOPS of 64,000 is guaranteed only on Nitro-based instances that are on the m5, r5, and z1d instance types. 
					Other instance families guarantee performance up to 32,000 IOPS

	Ultra high IOPS:-
		If you need IOPS > 64000 or in milliions iops oer sec. 
		Then you have to go for InstanceStore.



