
A lod balancer simply route the application request or network traffic to the diffrent targests like EC2 instances, containers, and IP addresses, in multiple Availability Zones


<<<More theory needed>>>>

AWS provide three king of LB :-
  1. Application LB : for general purpos HTTP/HTTPS LB
  2. Network LB : for ultra efficient and have performance of million request per sec
  3. Classic LB: previous gener
  
  <<Detail diffrence come later>>


Creating A LB for EC2-webserver:-
  1. Take care that proper region is chossen.
  2. EC2 -> Load Balancer -> Create [Application LB] 
  3. Now slecet name 
  4. choose schema: internet facing
  5. Listener:-
      keep the HTTP port 80 open for allowing in the internet traffic
  6. VPC/SubnetId/Availability Zones :-
      Here you have to select the VPC and then the subnet in that VPC.
      The LB will route the traffic to EC2 lying in that subnets only.
      Therts is some rule to choose subnet
        - You have to choose at least two subnet
        - both the subnet must lie in diffrent AZ.
      
      
  7. Security Group:
    A SCG which has inbound port open. this port could be 80, 3000, 8080 etc. 
    default is 80 but if your app in subodinate EC2 may ran on diffrent port so you may wants ti tobe like 80, 8080, 3000
    EG: 
    HTTP   80     0.0.0.0/0, ::/0  or 
    HTTP   8080   0.0.0.0/0, ::/0  or
    HTTP   3000   0.0.0.0/0, ::/0

  8. Routing/Target Group: 
    The routing group inform the load balancer that to 
      whome (To EC@ or Lembda) he should navigate the traffic and 
      how (Via HTTP:3000 or HTTP:80 or SSH:22)
    Slect or create the routing group of you choice
    How to create
      8.1  select routing group name 'MufWebServerRoutingGroup'
      8.2  Target Type: instance.  
                Becauase we wants to route the traffic to th EC2 instances
      8.3  port and protocol 
                This inform the EC2 that how he should connevt the EC2s, 
                you need to specify the protocol and port.
                generally its HTTP and port 80.
                But many app (specially Node app) may ran at diffrent port so it could be 80, 8080, 3000 etc.
      8.4 Health Chech ?????
      8.5 Register Target:
          8.5.1 Here you will register the targest for LB ports chosen in step 8.3
                This targets are instances of running EC2s, you can select multiple of them here.
  9 press Create and you are done   
 
 
 Now later if you wants to add or remove any Ec2 instance again then-
  EC2 ->  Load Balancing -> Target Group 
  Choose the one you created in step 9, and add remove target as in step 8.5.1
  
  
  
  
   ----------------------                           
                          ------HTTP--------      --|            |--     ---HTTP--- 80 - EC2 1  
    world wide web        ------HTTP--------      --- 80 - LB-------     ---HTTP--- 80 - EC2 2
                          ------HTTP--------      --|            |--     ---HTTP--- 80 - EC2 3                               
 -----------------------                                      

 
Q: If we are ok to use only one EC2 instance for webserver then can we ignore use of LB completly
A: No! Not at all.
    Because EC2 instance is something that could be carsshed/stop/terminat. And if next time 
    you again start a new instance then it will have a new public IP. And if he got a new public ip
    then webserver will be pointed out to diffrent location
    SO LB save you from this uncertainity. and even if EC2 went down and we start new EC@, we can simply
    place this new EC2 behid the existing LB. and so your endpint remain same.
    
Its always an good idea that you create a EC@ instances in diffrent AZ, Create LB capable to connect with those AZ for fault tolenrence    
    

-
In above discussion i assume that we used apache server at port 80, but this is chengable so if i am using Nde server at 3000 like below
                              http.createServer(function (req, res) {
                                res.write('Hello World! version 1'); 
                                res.end(); 
                              }).listen(3000);
Then i have to user 3000 in place of 80 everywhere.

----------

LB and HTTP Header
https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/x-forwarded-headers.html

Network LB???????????


-----------

  LB and EC2-NodeJS server:-
    This is 100% same as above with minore cahnge,
    say your nodejs server is running at port 3000 then you select port 3000 instead of 80 everywhere.
    So if instaed of port 80 app is running at port 3000 then below things should be changes-
    1. Security Group: 
        ins step 7 you set
        HTTP   3000   0.0.0.0/0, ::/0
    2. Routing/Target Group: 
        in step 8.3
          it should be HTTP:3000
    
    
    I
  if you have user the port 80 then you do not have to give the port because HTTP has it default but if you setuo at t port 30000 then use
        mynodelb-585968286.us-east-1.elb.amazonaws.com:3000
  
_-----------------

LB and ENI: just like an ec2 the networking unit of LB is ENI.
The SG of LB is also attached to that ENI.
the LB always need at least two subnet each in diffrent AZ.
and ENI lies in a sinlgle subnet so LB will always have at least two ENI attached.
if LB can span to n number of AZ then it must at least have n number of ENI.
also each ENI will have an public ip attached to it.
  
LB Health Check ???????????/
 
 
---------------------------

LB and EIP:-
  LB do not have any EIP or public IP. the ELB is reaccable by its own DNS name lookup that is '<elb name>.us-east-1.elb.amazonaws.com '

LB and ENI:-
  LB do has the private IP and assosiated ENI in each of selected subnet.

--------------------------------

Sticky Session:-
  Sticky session foe LB is used when you want a session on any user to handled by a specific EC2.
  Only classic LB support it properly. if you enable thhen all the request in particular user session will be deliver to one specific EC2.
  
  ALB also support ot but the request will be deliver to one of the ECw in specific Target group,
  
  
--------------------

LB - Traget - AZ relations:-
  When you create the LB you first select the AZ where the LB will work. in background AWS place an ENI in each AZ you selected.
  





