What is rackspace


Why EC2: because purchasing a server and maintaining them is a hell.
          Now with EC2 you buy a machine and ready to go.
          
          

Pricing-
  On Demand:
    You pay by usage/hour or per second
    Best For -
      If you do not need any long term contract
      Low Cost
      Short live application
  Reserved:
    You reserve the capasity for a certain time (for a 1 yera to 100s of year).
    You are locked in a contract. AWS generally provide yuo discount if you contract for longer time. You also need to pay some amount upfront.
    Best For -
      App that need steady and predictable usages (So you calculate the computing power well in advance, 
                                                        so pay upfront in advance and get good discount from AWS)
      Type of Reserved :-
        1. Standard:    You cant change the EC2 instance type
        2. Convertible: You can change the EC2 instance type      
        2. Schedule
  Spot:
      This work like a biding in stock market, you bid for a any instacne with many others. 
      The best one get the deal, and if sombody again ready to pay more then you lose (after some agreed time) this instance.
      Best For:-
         Me: Hey! i want to do this task its kind of R and D, but it will take fair computing power so buy some Ec2. no specific strat or end time required
         Finance: We do not have much money for R and D. 
         Me: Ok! lets go to Spot pricing, when it cost low buy some, work on it, release if it get costly, and  keep doing it at very low cost.
         Finance: smart guy.
  Dedicated Host:
    Generally if you need to follow soome regulatory protocols. and you need the physical server dadicated to you only.
    This physically hosted server do lies in AWS building but unlike other EC2, this are solely assign to you.
    Very costly
    
    
Type of Ec2 instances-
  There are couple of EC2 instances which are design to achive a specific goal
  EG
    T3    Low Cost-Genral purpose     web server/small DB
    G3    Graphics intensive          video
    I3    High speed storage          NoSql, DBs
    R5    Memory optimized            Memory intensive
    M5    General Purpose             App Server
    ...
    ...
    
Subtype of instances:-
   Each above type of instance is design to support and handle specific type of requirment. Like one is best for
   DB and other is optimized for game. 
   After selecting a type nest thing is how intensive you wants to use your system.
   EG: you say i need a DB optimized Or web-server optimized instance, But how intensive your workload going to be.
   Depending on this you select the subcategory.
   
   Lets say i wants a general purpose T3 instance.
   Now    if my workload is moderate then i will go for t3.small
          if my workload is significant then i will go for t3.large
          if my workload is bulky then i will go for t3.xlarge
   Whats diffrence in between this instances :-
          diffrence comes in Memory-size (RAM not EBS), vCPU count, Storage type (EBS or other).
      
  
  >> Type and SubType is two most fundamental decesion you must take before selecting an instance.
  
  Setting instance configuration:-
   Once you decided waht type and subtype you wants, next comes the configuration
   This are the peramter you set before launcing, Some example are
   1. No of instances
   2. Autoscalling
   3. spot price config if needed
   4. network and VPC ???
   5. subnet: decide in which AZ the instance will lie
   6. assign public IP: aws has a pool of public IP avialable to use. If you need one then it will be assign to your EC2.
                        With Public IP you can access the Ec2 instance over public internet
   7. Capacity reservation if needed
   .....etc.
   


The next IMP thing comes in EC2 is Hard Disk Drive, You need to devide how much storage you need for any EC2 instance
The storage in EC2 is EBS    
    EBS:-
    As like any normal PC/Server the virtual PC/Server also need a hard disk, EBS play this role
    EBS is virtual Hard Disk Drive of you EC2 instance.
    You can use this drive to 
      install OS, mounting File System, DB etc.
    Type of EBS :-
      1. SSD
          1.1 GP2 : General Purpos SSD- 
              balanced price, good performance
              Best for : general purpose
          1.2 IO1 : Provisioned IOPS SSD - 
              Highest performance, High price
              Best for: mission-critical, low latancy and high throuput work. best for main DB's of your app
       2. Megnetic
          2.1  ST1 :  Throughput optimize 
                 Low cost - frequently accessed
         2.2   SC1 :  Cold HDD  
                Lowest cost - less frequently accessed 
                Best for file server.
            
    
Depending on your requirment you select the storage type, But as like computing power here also you need to decide on
capasity of your storage.
Seting the congiguration for EBS:-
    When you set up the EC2 and EBS for that EC2. First decide how many drive you need. (at least one is must)
    The first drive is always the default one and called Root. You can chnage its type, size but cant delete it.
    Its root path is also fixed (eg. : '/dev/xvda' for linux).
    Only GP2 and IO1 can be used as Root
You can create more than one drive, the non-root drive can be one of type GP2, IO1, SC1, ST1. you can chose its size, drive-path
Also you should note down the IOPS(input output per second) of selected device for performance tuning.
          
     So Following thing you Set for EBS -
          1. Type
          2. device path
          3. snapshot ?????
          4. Size
          5. Note down IOPS
          6. Delete on termination ????
          7. Encryption

Geography of EBS and EC2 :- A EBS attached to EC2 does lie in the same AZ as of EC2.
    

Security Of EC2 instance:-
    This is most critical part of EC2, Security of EC2 is implemented via Security group attached to EC2 
    Security group is nothing but a kind of firewall around EC2, that decide who can communicate to EC2 and who cannnot.
    
    ## Read Network Traffic Protocol ### in notes.txt    
    Over the network there is multiple way to connect the EC2 with external system
    1. If EC2 is linux based instance then we can use SSH (at port 22 of EC2)
    2. If EC2 is window based instance then we can use RDP (at port 22 of 3892)
    3. Connect EC2 (any based) with internet traffic with HTTP and HTTPS ( on port 80 or 443)
    4. POP, SMTP ....etc.       

    You have to set-up the InBound rule for this security group, this inbound rule will tell 
    what kind of traffic (SSH, RDP, HTTP...)
    And generated by whome (By which IP)
    are allowed to listen by EC2 instance
    
    EG:   Allow listening of SSH traffic from 1.2.3.4, but not other
          Allow listening of RDP traffic from 1.2.3.5, but not other
          Allow listening of RDP and SSH traffic from 1.2.3.*, but not other
          Allow listening of HTTP traffic from 1.2.*.*, but not other
          .....hell lot of combination possible...
       
   Selection of sourcce IP:-
          
          To allow which particular IP is allowed to connect to EC2 and whoich is not you should pass a 
          kind of regular expression of IP address.
          EG: 
              0.0.0.0/0, ::/0    :   will allow all the IP address to connect to EC2 via selected protocol
              0.0.0.0/0, ::/0    :   will allow all the IP address to connect to EC2 via selected protocol
              113.193.134.22/32  :   will allow all the 113.193.134.22 to connect to EC2 via selected protocol
              113.*.*.*/32       :   will allow all matching IPs to connect to EC2 via selected protocol
        This is CIDR notation of IP. Will study it later

Securing the connection: 
   Once the connection is established with EC2(linux, window any type) with another system (window based, linux based etc..) via any 
   protocol (SSH, RDP, HTTP etc..)
   The next thing comes is to make the communication safe and non penetrable.
   Whatever you both talking, nobody in the network should be able to decode it.
   
   For this we will study diffrent cases
   1.     Securing SSH for EC2 linux-instance and any remote client
   2.     Securing RDP for EC2 window-instance and any remote client
   3.     Securing HTTP and HTTPS
   ...etc
   
   Securing SSH and RDP: For this aws provide PPK based encryption. The EC2-instance will encode all the thing via public key
   and the peer we be able to decode it with its private key (correct one).
      For detail on SSH: read ssh.txt
      For detail on RDP: Study later
   
Outbound rule of security group: it will tell to whome the EC2 can iniate the communication [will see later] ????



EC2 and Other AWS services -> 
    EC2 can perform operation over diffrent aws service (E.G S3, cloudfront etc)
    But before performing the operation the EC2 instance should have proper autorization
    There is two way to Authorize the EC2-instance for other AWS operation
    1. By loging in to AWS-CLI in EC2 instance with authorized user of AWS account, For this you must have a authorized user
    2. By assigning the role itself to EC2 instance. (No IAM user required)
    
    #AUTHEC2_WAY_1
    Way 1: 
          1. Strat EC2 instance
          2. Create user with proper permission to access and manage S3 
          3. From SSH-terminal connect local pc ('muf') with EC2 ('bar') via proper private key
          4. One you are in terminal of EC2 (Not you local PC)
                    at   ec-user@1.1.1.1 >_
                    not  MufazzalPC: >_
             do the login to aws-cli via command 'aws configuration' with proper access key and ID of user created in step 2
             
          under the hood: 
                    the command 'aws configuration' create a config file i EC2 instance at path '?????'
          Security flaw in here :-
                    The EC2 instance actully save the access key and ID at './aws' directory of EC2 honme drive
                    So sombody may be able to see it if he has access to EC2 via SSH. So second aproach is recommended.
                    Also if your key is compromisesd and you change it. then you have to login in all Ec2 instances manulally
                    and change them via 'aws comfiguration'. 
                    
         
    #AUTHEC2_WAY_2
    Way 2:
          1. Crate a Role in IAM (for EC2) with proper permissions [seAdminFullAccess in our case]
          2. right click on EC2 > action > instance setting > add/remove Role
          - You can attach or dettach the Role   from EC2,  and it      will take immediate effect. you dont even have to restart the Ec2
          - You can attach or dettach the Policy from Role, and it also will take immediate effect. you dont even have to restart the Ec2
           
    VVVINMP : in way 2 the it is very IMP to remember that the aws configuration file will not be created at the path '??????'.
              so in the code if you have used 'new AWS.SharedIniFileCredentials({profile: <profile>});' 
              The code will fail for sure.
      
           
    Lets say you wants to create a S3 bucket wirh EC2
       For this Once login is successful, You can use the comands to create S3 bucket at location '  ec-user@1.1.1.1 >_ '
                    >  'aws s3 mb s3://muf12decbuck'

    ------------------
    
    Using EC2 As Apache Web Server :-
          Till now we have seen that how we can configure the EC2 instance to listen the SSH traffic on Port 22, We see hoe we create the 
          Security group with inbound rule of (SSH-22-0.0.0.0) setup.
          Now when we wants to creat a Apache webserver also out of this EC2, The first thing we need to do is to 
          let the HTTP traffic to be listened at port 80 so first step to create a web server is to creat a security group with 
          inboud : 
                    SSH  22   0.0.0.0/0   -> because you may also need it to access by SSH
                    HTTP 80   0.0.0.0/0
     
    nest thing you require to use EC2 as web server 
    1. A proper webserver to be installed like Apache, websphere etc.
    2. A proper war or html deplo on it    
    
    Lets create one vert tiny web server from EC2 :-
    create EC2 with proper security group 
    Connect to EC2 by SSH
    > yum update : to update ec2 libs
    > yum install httpd -y : install the appache server
    > service httpd start : strat the servert
    > cd /var/www/html : go to the server directory which will be visible to internet
    > Create a file 'index.html' [how> CLI.txt #CreatFile]
    > DONE : go to the IP of EC2. EG : http://15.206.125.146/ or http://15.206.125.146/muf.html
    
    Selecting source as another Security Group:-
          Instead of the CIDR block you can also select another security group as source.
          EG: say a EC2-muf has SG as
            SSH  22     sg-1
          This will allow all the EC2 whos securyty group is 'sg-1' will be able to establish connection with EC2-muf. 
              
    
    Ec2 and Nodejs web server:-
          When you use the EC2 for NodeJs webserver you may use diffrent port then 80 EG.
                              http.createServer(function (req, res) {
                                res.write('Hello World! version 1'); 
                                res.end(); 
                              }).listen(3000);
          So here in SG instead of opening 80 you should open 3000 
                    SSH  22     0.0.0.0/0   -> because you may also need it to access by SSH
                    HTTP 3000   0.0.0.0/0
    
    ----
    
    EC2 Bootstap script : 
          https://acloud.guru/course/aws-certified-cloud-practitioner/learn/Cloud-Concepts-And-Technology/lets-use-a-load-balancer/watch?backUrl=~2Fcourses&backUrl=~2Fcourses
          at 5:52
     
     
    ----------
    
    EC2 - web server install wordpress script : 
          #!/bin/bash
          yum install httpd php php-mysql -y
          cd /var/www/html
          wget https://wordpress.org/wordpress-5.1.1.tar.gz
          tar -xzf wordpress-5.1.1.tar.gz
          cp -r wordpress/* /var/www/html/
          rm -rf wordpress
          rm -rf wordpress-5.1.1.tar.gz
          chmod -R 755 wp-content
          chown -R apache:apache wp-content
          service httpd start
          chkconfig httpd on



EC2 AML image: 
          You can create an image of EC2 (kind of template) so that you can create the 
          exact copies of imaged EC2 instance later.
          For this
                   EC2 > 'you ec2 instace' > righ click > image > create image
           For creating EC2 from instace-
           ?????????????????
                   
 -------------------
 
 
 Monitering via cloudwatch:-
    EC2 is very heavily integrated with Cloudwatch.
    EC2 send detail data metric to the cloudwatch that you can view in the cloudwatch page of you AWS console.
   in EC2 the cloudwach by defult provide info about
          CPU 
          Network 
          Disk IO
          Status
      But by default it does not moniter 
          Disk usages
          RAM utilization
        To moiter this two you need to have the custom metric.

       How to view this metric
        AWS > CloudWatch > MEtrics > EC2 > Per-Instance Metrics > search with instance ID 
        You can see many metrics there and see diffent performance indicator.

      By default the performance data form the EC2 is monitered in every 5 minut. but you can enable the detail monitering.
      If you enable it then data wil be monitered in every 1 minute.
      for this:
        AWS > EC2 > Instances > you instace > Action > 'Per-Instance Metrics' > yes
      IMP: this is chargable.
      This will also moniter the default data metric only but more frequently.

      Custom metrics:-
        TRhis is the metric of performance data that are not by default monitor by the clouwact.
        user have to set it up by himself.    
        How?
          1. The first thing you need is to get the EC2 special permission via a policy called ''
              So create a Role for EC2 that has the policy '' attached and attach this role to your EC2 instance.
          2. install the cloudwatch in your EC2 instance via below commands
                    yum update -y
                    sudo yum install -y perl-Switch perl-DateTime perl-Sys-Syslog perl-LWP-Protocol-https perl-Digest-SHA.x86_64
                    cd /home/ec2-user/
                    curl https://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.2.zip -O
                    unzip CloudWatchMonitoringScripts-1.2.2.zip
                    rm -rf CloudWatchMonitoringScripts-1.2.2.zip
              TIP:: you may wants to put this script in user data for auto install.
              After running this commands in the /home/ec2-user/ directory you  will be able to see a folder name 'aws-scripts-mon'
              in this folder there is coulple of file, we do not need to go in detail of all those.
              But there is one file nameed 'mon-put-instance-data.pl'
              This has necessary script (in perl) to push the data metrics at cloudwatch. we need to run this script
            3. lets say our custom data metrics is for memory utilization, memory used and memory available.
                So to send the data about this metric to cloud watch use below command
                  /home/ec2-user/aws-scripts-mon/mon-put-instance-data.pl --mem-util --mem-used --mem-avail
             4. Now the EC2 will send the data to Cloudwatch and after some time you can see this metric at cloudwatch page
                How much time it take?
                  if EC2 has only statdared monitering then it may take 5 mnt. but if its detail then may be only 1.
                Where to see this metric:
                  AWS > CloudWatch > MEtrics > in Custom Namespaces > Linux System
                you can see this three data there.

            VIMP: This is only one moment monitering means datais ent for this metric is for an specific moment when the command ran.
                  if you wants to send the data again then you have to re-run this command. 

           Custom metrics with Crone job:-
            As you know that above command send the data only when it ran. so for continous monitering the best approach is to
            add this command in crone job
            How?
              its not in scope here.

          
 -----------
          
          User Data:
            In the user data you can provide the script that can ran at the initilization of the EC2 insyance.
            This script run only at once. never rerun again even if you reboot the instance.
            
            You can provide it like this
                #!/bin/bash
                yum update -y
                yum install -y httpd 
                ...
                ...
             The first line tell the AWS to run this script on EC2 with bash
             -y: in the mid of running any command in script it may be possible that user would be asked to enter somthiy 
                like'press Y to continue'. fir this proide the answer in advance.
             This script run with root user so no need for 'sudo su' 
             The ouput log can be sen at 'var/log/cloud-init-output.log'
    
installing Node-js on EC2 -
          https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-up-node-on-ec2-instance.html

--------------------

	
AMI:-
An Amazon Machine Image (AMI) provides the information required to launch an instance. You must specify an AMI when you launch an instance	
An AMI includes the following:
          - One or more EBS snapshots
          - Launch permissions that control which AWS accounts can use the AMI to launch instances.
          - A block device mapping that specifies the volumes to attach to the instance when it's launched.          
          
      Creating AMI from EC2-    
          You can create a AMI from the instance. the AMI will take the Snap of 
          attached EBS + OS + Software installed + Software Configuration
          and store it as AMI in S3.
          When you create an AMI from EC2 then the snapshots of each attached EBS-Volume will be created.
          So AMI = EBS-Snapshot + OS + Software + Configs
          You can see your AMI in EC2 > AMI

          Creating instace via AMI:-
          On AWS consolse when you create a EC2 you can select the AMI you created in step 1.
          The below thing thing will be copued to new instance
          1. OS
          2. Virtlization type HVM or ??
          3. EBS from the snapshots of that AMI
                    - Here the root EBS can not be deselected but other mounted EBS can be deselec.
                    - For each EBS-snapshot a volume will be created and will be attached to launched EC2.

          What about Type: t2.micro etc. This do not come from AMI. you should select it as your requirment

          Say you have a EC2(Orignal) running which has some files and software installed.
          What will be the start state of any EC2 created for AMI of the orignal EC2 
          
Instance		  root files     EC2-user files		start-script		node	apache	web-server Running
Orignal		          Yes		Yes	        	Yes	          	Yes	Yes	Yes						
Via AMI   	          Yes		Yes			No		   	Yes	Yes	No
