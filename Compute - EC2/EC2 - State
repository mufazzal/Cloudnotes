
Stop Instance:-
  - you wont bear charge for EC2 but will be charged for EBS volume
  - Lost the public IPv4 but retain the Private IPv4
  - Reatin the static EIP and you will be charged for that [EIP id free if its assosiated with running instance]
  - Retain the IPv6
  - ENI remian attached
  - You can change below param of EC2 when it is stopped
      Instance type, User data, RAM disk, EBS-Optimization, Placement group
      you cannot change above thing when EC2 is running.
  - Instance with root disk as Instance-store type instance cannot be stoped.
  - For non-root instance-store disk, data will be lost.
  - Instance may start again on new underlying Hardware Host

Terminate Instance:-
  EIP, IP, private IP, IPv6 all will lost. 
  By default root volume will be deleted but it can be retain if its checked.
  By default non-root volume will be retain but this can also be changed.
  Termination Protection:-
    this is controlled by flag 'DisableApiTermination'. you can set it by console. api, sdk, cli.
    if enable then the instance cannot be terminated from console, api, sdk, cli.
    it can only be terminated from OS command only. so you have to ssh in instance and shut it down.


Hibernate Instance:-
  - in hibernet state EBS remain attached and RAM data stored in Root-EBS
  - Lost the public IPv4 but retain the Private IPv4
  - Retain the IPv6
  - ENI remian attached
  - Reatin the static EIP and you will be charged for that [EIP id free if its assosiated with running instance]
  - Instance with root disk as Instance-store type instance cannot be Hibernate.
  - For non-root instance-store disk, data will be lost.
  - Instance may start again on new underlying Hardware Host
  - This is not supported if instace is in ASG or used for ECS.


Rebbot Instance:-
  Here all thing remain attached
  public and private IP, volumes, all remian. you also bear all the charges.
  Rebooting instance-store instance:-
    Data will persist 

-------


EC2 Hibernate:-
	The EC2 hibernate provide fater alternative to start and stop the instances.
	When you stop the instance then the instance RAM is evoparated and OS is lost. so when you start it again then the EC2 has to 
	first load the OS then
	run the user data script and then
	run the applications again if needed.
	And all this takes time. 
	But if you hibernate the EC2 then the RAM conent is not loast instead it copied in the attached Root EBS and when its started back from Hibernation then 
	the conent preserved from RAM is loaded again from EBS. and so none of the process need to be re-done.
	To make EC2 hibernate compatible you have to have large EBS volume attach to accomodate RAM content and also you must enable it at a time of instance creation.
	
	By default EC2 do not enable Hibernation function. It must ne enable at a time of launch. 
	To put EC2 in hibenation:-
		Ec2 > your inst > state > Hibernate

        Charges when ec2 in the Hibernate;
           This is where u save money. u will be charged for EBS volume and Elastic ip (if attached).
           u will not have to pay for EC2 itself.
	
	Limitation:-
		- canot work if RAM > 150 GB
		- for instance store data in RAM will not be preserve
		- do not work for spot instances.
		- you cannot keep a instance in hibernate for more then 60 days.
		
		
	Hibernate and spot instance:-
		This feature is very useful for spot instances.
		you can change behaviour of Inturuption to 'hibernate' so instance will hibernate rather then stop. 
		so when instance is re-accuired, you can resume the process from the point where the instance was lost due to price rise. 
		Thogh to use this feature in spot instance
			- For a Spot Instance request, the type must be persistent
			- For an EC2 Fleet or Spot Fleet request, the type must be maintain
-----------------

Impaired Instance:-
	Sometime instance goes in impaired state usually due to some hardware some software issue that required AWS involvement to resolve.
	If AWS resolve it successfully then it comes to start state again.
	It wil keep all the item attach to it like instance ID, private IP, Public IP, Elastic IP, and all instance metadata.
  But itr will lose all the RAM data.
	
	
	

