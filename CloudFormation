The cloudforamation in simple word is "Infra AS Code"

This is the way to w4rite complete inra in Jsom or Yaml file. You can write the file or use AWS designer for this.
You can design  EC2, S3, RDS etc with this.
Once the templatebjson or Yaml is created, it can be used anywhere to build whole infra out of this template. 
Its impossible to become master in clouformation and know how cloudformation template can be designed to make EC2, S3 etc.
But you should know the fundamentals

To understand the CloudFormation always remebper there is two party 
one is Creator, who create the template
other is Builder who is building the stack out of template

Creatore create the template as such that the tempplate
has definations of RESOURCES like EC2, S3 etc
has some MAPPING, which are like a function which take one input and return the set of label
has some PARAMETER which are set by Builder at a time of stack building
has OUTPUT, which are final logs of stack creation



Structure of template file:-
  In the cloud formation template has below part
  1. AWSTemplateFormatVersion: This has the constante value '2010-09-09'
  2. Description: optional
  3. Resource:-
      This is most imp part of tempalte file. it has defnation of resorce like EC2, s3 and it s configuration also.
      Diffrebt S3 services has diffrent set of defination template. Its impossible to remeber them all.
      But for refrence best is to look at 
        https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-sample-templates.html
  4. Mapping:-
      In the template the mapping are the function which take a string as input and return the set of label. 
      In the template you call this function to get some value based on certain condition. you have to pass what label you wants to get.

      EG:-
                "Mappings" : {
                  "GetPersonData" : {
                      "Mufazzal"        : { "AGE": 32, "City" : "pune"},
                      "Murtuza"         : { "AGE": 22, "city" : "indore"},
                   }
                 }
                 
              How to call it:-
              use this syntex-
                              { "Fn::FindInMap" : [ "MapName", "TopLevelKey", "key ypounts in return"] }
              EG-
                 "perData" :  { "Fn::FindInMap" : [ "GetPersonData", "Mufazzal", AGE]},
                 
              In the calling we are calling the function 'GetPersonData' passing the param 'Mufazzal' and asking to returm label 'AGE'
              so it wil return 32.
              
    5. PARAMETER:-      
         This is where the Creator define the defination of some inputs. when the builder create the stack from the template.
         Builder would be asked to provide this inputs valye via UI.
         This parameter could be anything. So builder could be asked to
          - Give a simple string or Number[a input box will be shown]
          - A value from set of predefined one [dropdown will be shown]
          - Key pair for SSH [the dropdown with key pair defined in that region by userm he need to selecty one]
          - Security group [the dropdown with Security group defined in that region by userm he need to selecty one]
          - VPC, Subnet, etc.
              more : https://aws.amazon.com/blogs/devops/using-the-new-cloudformation-parameter-types/
           
           EG:- say you wants the user to choose the instance type and assign it value in 'MufInstanceTypeParameter'
                
                  "Parameters" : {      
                    "MufInstanceTypeParameter" : {
                      "Description" : "WebServer EC2 instance type",
                      "Type" : "String",
                      "Default" : "t2.small",
                      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small"],
                      "ConstraintDescription" : "must be a valid EC2 instance type."
                    },      
                  }
           

          One more EG:-
                      "Parameters" : {      
                        "MufKeyName" : {
                          "Description": "Name of SSH KeyPair"
                          "Type" : "AWS::EC2::KeyPair::KeyName",
                        },      
                      }          
           This will prompt the builder with dropdown and ask to select the SSH key pair.
           How would you use this values in template?
                      ...
                      ...
                      "InstanceType" : { "Ref" : "MufInstanceTypeParameter" },
                      "KeyName" : { "Ref" : "MufKeyName" },
                      ...    

         There are many way to write such defination for more go to google.
    
    6. Outout:-
        Here you define what output log the builder will see once the stack is created.
        EG:-
              Outputs: 
                MufInstanceID:
                  Description: The Instance ID
                  Value: !Ref MyEC2Instance          
         It will show a pair in which the key is 'MufInstanceID' and value is theid of resource instance 'MyEC2Instance' 
          
          
          
--------

Template designer:-
  The fastest and easiest way to create a template is to use template builder of AWS.
  its so simple with drag drop and fir refrence always use sample template.
          
---------
  RTefering diffrent element in remplate:-
    for tjhis you can use 'Ref'
    EG:-  
      Ref <WHATEVER>     :> will refer to WHATEVER, which could be a EC2 isntance, SecurityGroup, S3 Bucket, simple string,
                            keypair, region.

    

---------
Elastic Beanstalk VS CloudFormation
CloudFormation a great grand father of Elastic Beanstalk.
ELB is not programmable meaning you set up an preconfigured application either for hello world or with existing code (war/zip)
CloudFormation is the soluction where you can change, create, delete, update all the diffrent parts(EC2, S3 ..) of your app. Its completely programmable.


-----------------

      
      
      




